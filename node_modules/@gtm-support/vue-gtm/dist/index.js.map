{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import type {\n  GtmIdContainer,\n  GtmQueryParams,\n  GtmSupportOptions,\n  LoadScriptOptions,\n} from '@gtm-support/core';\nimport { GtmSupport as GtmPlugin, loadScript } from '@gtm-support/core';\nimport type { App, Plugin } from 'vue';\nimport { nextTick } from 'vue';\nimport type {\n  ErrorTypes,\n  NavigationFailure,\n  RouteLocationNormalized,\n  Router,\n} from 'vue-router';\n\n// eslint-disable-next-line jsdoc/require-jsdoc\ntype IgnoredViews =\n  | string[]\n  | ((to: RouteLocationNormalized, from: RouteLocationNormalized) => boolean);\n\n/**\n * Options passed to the plugin.\n */\nexport interface VueGtmUseOptions extends GtmSupportOptions {\n  /**\n   * Pass the router instance to automatically sync with router.\n   */\n  vueRouter?: Router;\n  /**\n   * Derive additional event data after navigation.\n   */\n  vueRouterAdditionalEventData?: (\n    to: RouteLocationNormalized,\n    from: RouteLocationNormalized,\n  ) => Record<string, any> | Promise<Record<string, any>>;\n  /**\n   * Don't trigger events for specified router names.\n   */\n  ignoredViews?: IgnoredViews;\n  /**\n   * Whether or not call `trackView` in `Vue.nextTick`.\n   */\n  trackOnNextTick?: boolean;\n}\n\nlet gtmPlugin: GtmPlugin | undefined;\n\n/**\n * Installation procedure.\n *\n * @param app The Vue app instance.\n * @param options Configuration options.\n */\nfunction install(app: App, options: VueGtmUseOptions = { id: '' }): void {\n  // Apply default configuration\n  options = { trackOnNextTick: false, ...options };\n\n  // Add to vue prototype and also from globals\n  gtmPlugin = new GtmPlugin(options);\n  app.config.globalProperties.$gtm = gtmPlugin;\n\n  // Check if plugin is running in a real browser or e.g. in SSG mode\n  if (gtmPlugin.isInBrowserContext()) {\n    // Handle vue-router if defined\n    if (options.vueRouter) {\n      initVueRouterGuard(\n        app,\n        options.vueRouter,\n        options.ignoredViews,\n        options.trackOnNextTick,\n        options.vueRouterAdditionalEventData,\n      );\n    }\n\n    // Load GTM script when enabled\n    if (gtmPlugin.options.enabled && gtmPlugin.options.loadScript) {\n      if (Array.isArray(options.id)) {\n        options.id.forEach((id: string | GtmIdContainer) => {\n          if (typeof id === 'string') {\n            loadScript(id, options as LoadScriptOptions);\n          } else {\n            const newConf: VueGtmUseOptions = {\n              ...options,\n            };\n\n            if (id.queryParams != null) {\n              newConf.queryParams = {\n                ...newConf.queryParams,\n                ...id.queryParams,\n              } as GtmQueryParams;\n            }\n\n            loadScript(id.id, newConf as LoadScriptOptions);\n          }\n        });\n      } else {\n        loadScript(options.id, options as LoadScriptOptions);\n      }\n    }\n  }\n\n  app.provide('gtm', options);\n}\n\n// eslint-disable-next-line jsdoc/require-jsdoc\ntype NavigationFailureType =\n  | ErrorTypes.NAVIGATION_ABORTED\n  | ErrorTypes.NAVIGATION_CANCELLED\n  | ErrorTypes.NAVIGATION_DUPLICATED;\n\n/**\n * Initialize the router guard.\n *\n * @param app The Vue app instance.\n * @param vueRouter The Vue router instance to attach the guard.\n * @param ignoredViews An array of route name that will be ignored.\n * @param trackOnNextTick Whether or not to call `trackView` in `Vue.nextTick`.\n * @param deriveAdditionalEventData Callback to derive additional event data.\n */\nfunction initVueRouterGuard(\n  app: App,\n  vueRouter: Exclude<VueGtmUseOptions['vueRouter'], undefined>,\n  ignoredViews: VueGtmUseOptions['ignoredViews'] = [],\n  trackOnNextTick: VueGtmUseOptions['trackOnNextTick'],\n  deriveAdditionalEventData: VueGtmUseOptions['vueRouterAdditionalEventData'] = () => ({}),\n): void {\n  // eslint-disable-next-line jsdoc/require-jsdoc\n  function isNavigationFailure(\n    failure: void | NavigationFailure | undefined,\n    navigationFailureType: NavigationFailureType,\n  ): boolean {\n    if (!(failure instanceof Error)) {\n      return false;\n    }\n    return !!(failure.type & navigationFailureType);\n  }\n\n  vueRouter.afterEach(async (to, from, failure) => {\n    // Ignore some routes\n    if (\n      typeof to.name !== 'string' ||\n      (Array.isArray(ignoredViews) && ignoredViews.includes(to.name)) ||\n      (typeof ignoredViews === 'function' && ignoredViews(to, from))\n    ) {\n      return;\n    }\n\n    // Dispatch vue event using meta gtm value if defined otherwise fallback to route name\n    const name: string =\n      to.meta && typeof to.meta.gtm === 'string' && !!to.meta.gtm\n        ? to.meta.gtm\n        : to.name;\n\n    if (isNavigationFailure(failure, 4 /* NAVIGATION_ABORTED */)) {\n      if (gtmPlugin?.debugEnabled()) {\n        console.log(\n          `[VueGtm]: '${name}' not tracked due to navigation aborted`,\n        );\n      }\n    } else if (isNavigationFailure(failure, 8 /* NAVIGATION_CANCELLED */)) {\n      if (gtmPlugin?.debugEnabled()) {\n        console.log(\n          `[VueGtm]: '${name}' not tracked due to navigation cancelled`,\n        );\n      }\n    }\n\n    const additionalEventData: Record<string, any> = {\n      ...(await deriveAdditionalEventData(to, from)),\n      ...(to.meta?.gtmAdditionalEventData as Record<string, any>),\n    };\n    const baseUrl: string = vueRouter.options?.history?.base ?? '';\n    let fullUrl: string = baseUrl;\n    if (!fullUrl.endsWith('/')) {\n      fullUrl += '/';\n    }\n    fullUrl += to.fullPath.startsWith('/')\n      ? to.fullPath.substring(1)\n      : to.fullPath;\n\n    if (trackOnNextTick) {\n      void nextTick(() => {\n        gtmPlugin?.trackView(name, fullUrl, additionalEventData);\n      });\n    } else {\n      gtmPlugin?.trackView(name, fullUrl, additionalEventData);\n    }\n  });\n}\n\n/**\n * Create the Vue GTM instance.\n *\n * @param options Options.\n * @returns The Vue GTM plugin instance.\n */\nexport function createGtm(options: VueGtmUseOptions): VueGtmPlugin {\n  return { install: (app: App) => install(app, options) };\n}\n\n// @ts-expect-error: assume that `vue` already brings this dependency\ndeclare module '@vue/runtime-core' {\n  // eslint-disable-next-line jsdoc/require-jsdoc\n  export interface ComponentCustomProperties {\n    /**\n     * The Vue GTM Plugin instance.\n     */\n    $gtm: GtmPlugin;\n  }\n}\n\n/**\n * Vue GTM Plugin.\n */\nexport type VueGtmPlugin = Plugin;\n\nconst _default: VueGtmPlugin = { install };\n\nexport {\n  GtmSupport,\n  assertIsGtmId,\n  hasScript,\n  loadScript,\n} from '@gtm-support/core';\nexport type {\n  DataLayerObject,\n  GtmIdContainer,\n  GtmQueryParams,\n  GtmSupportOptions,\n  LoadScriptOptions,\n  TrackEventOptions,\n} from '@gtm-support/core';\nexport { GtmPlugin };\nexport default _default;\n\n/**\n * Returns GTM plugin instance to be used via Composition API inside setup method.\n *\n * @returns The Vue GTM instance if the it was installed, otherwise `undefined`.\n */\nexport function useGtm(): GtmPlugin | undefined {\n  return gtmPlugin;\n}\n"],"mappings":"AAMA,OAAS,cAAcA,EAAW,cAAAC,MAAkB,oBAEpD,OAAS,YAAAC,MAAgB,MAmNzB,OACE,cAAAC,EACA,iBAAAC,EACA,aAAAC,EACA,cAAAJ,MACK,oBAlLP,IAAIK,EAQJ,SAASC,EAAQC,EAAUC,EAA4B,CAAE,GAAI,EAAG,EAAS,CAEvEA,EAAU,CAAE,gBAAiB,GAAO,GAAGA,CAAQ,EAG/CH,EAAY,IAAIN,EAAUS,CAAO,EACjCD,EAAI,OAAO,iBAAiB,KAAOF,EAG/BA,EAAU,mBAAmB,IAE3BG,EAAQ,WACVC,EACEF,EACAC,EAAQ,UACRA,EAAQ,aACRA,EAAQ,gBACRA,EAAQ,4BACV,EAIEH,EAAU,QAAQ,SAAWA,EAAU,QAAQ,aAC7C,MAAM,QAAQG,EAAQ,EAAE,EAC1BA,EAAQ,GAAG,QAASE,GAAgC,CAClD,GAAI,OAAOA,GAAO,SAChBV,EAAWU,EAAIF,CAA4B,MACtC,CACL,IAAMG,EAA4B,CAChC,GAAGH,CACL,EAEIE,EAAG,aAAe,OACpBC,EAAQ,YAAc,CACpB,GAAGA,EAAQ,YACX,GAAGD,EAAG,WACR,GAGFV,EAAWU,EAAG,GAAIC,CAA4B,CAChD,CACF,CAAC,EAEDX,EAAWQ,EAAQ,GAAIA,CAA4B,IAKzDD,EAAI,QAAQ,MAAOC,CAAO,CAC5B,CAiBA,SAASC,EACPF,EACAK,EACAC,EAAiD,CAAC,EAClDC,EACAC,EAA8E,KAAO,CAAC,GAChF,CAEN,SAASC,EACPC,EACAC,EACS,CACT,OAAMD,aAAmB,MAGlB,CAAC,EAAEA,EAAQ,KAAOC,GAFhB,EAGX,CAEAN,EAAU,UAAU,MAAOO,EAAIC,EAAMH,IAAY,CAE/C,GACE,OAAOE,EAAG,MAAS,UAClB,MAAM,QAAQN,CAAY,GAAKA,EAAa,SAASM,EAAG,IAAI,GAC5D,OAAON,GAAiB,YAAcA,EAAaM,EAAIC,CAAI,EAE5D,OAIF,IAAMC,EACJF,EAAG,MAAQ,OAAOA,EAAG,KAAK,KAAQ,UAAcA,EAAG,KAAK,IACpDA,EAAG,KAAK,IACRA,EAAG,KAELH,EAAoBC,EAAS,CAA0B,EACrDZ,GAAW,aAAa,GAC1B,QAAQ,IACN,cAAcgB,CAAI,yCACpB,EAEOL,EAAoBC,EAAS,CAA4B,GAC9DZ,GAAW,aAAa,GAC1B,QAAQ,IACN,cAAcgB,CAAI,2CACpB,EAIJ,IAAMC,EAA2C,CAC/C,GAAI,MAAMP,EAA0BI,EAAIC,CAAI,EAC5C,GAAID,EAAG,MAAM,sBACf,EAEII,EADoBX,EAAU,SAAS,SAAS,MAAQ,GAEvDW,EAAQ,SAAS,GAAG,IACvBA,GAAW,KAEbA,GAAWJ,EAAG,SAAS,WAAW,GAAG,EACjCA,EAAG,SAAS,UAAU,CAAC,EACvBA,EAAG,SAEHL,EACGb,EAAS,IAAM,CAClBI,GAAW,UAAUgB,EAAME,EAASD,CAAmB,CACzD,CAAC,EAEDjB,GAAW,UAAUgB,EAAME,EAASD,CAAmB,CAE3D,CAAC,CACH,CAQO,SAASE,EAAUhB,EAAyC,CACjE,MAAO,CAAE,QAAUD,GAAaD,EAAQC,EAAKC,CAAO,CAAE,CACxD,CAkBA,IAAMiB,EAAyB,CAAE,QAAAnB,CAAQ,EAiBzC,IAAOoB,EAAQC,EAOR,SAASC,GAAgC,CAC9C,OAAOC,CACT","names":["GtmPlugin","loadScript","nextTick","GtmSupport","assertIsGtmId","hasScript","gtmPlugin","install","app","options","initVueRouterGuard","id","newConf","vueRouter","ignoredViews","trackOnNextTick","deriveAdditionalEventData","isNavigationFailure","failure","navigationFailureType","to","from","name","additionalEventData","fullUrl","createGtm","_default","src_default","_default","useGtm","gtmPlugin"]}