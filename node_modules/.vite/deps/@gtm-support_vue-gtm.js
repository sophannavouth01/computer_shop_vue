import {
  nextTick
} from "./chunk-BAEBKS4H.js";
import "./chunk-QIK6ZMEG.js";
import {
  __publicField
} from "./chunk-E3EO7R6B.js";

// node_modules/@gtm-support/core/lib/index.js
var l = /^GTM-[0-9A-Z]+$/;
function s(n) {
  if (typeof n != "string" || !l.test(n)) {
    let t = String(n).toUpperCase().replace(/.*-|[^0-9A-Z]/g, ""), r = t.length === 0 ? "" : ` Did you mean 'GTM-${t}'?`;
    throw new Error(`'${n}' is not a valid GTM-ID (${l}).${r}`);
  }
}
function p(n, t) {
  var _a;
  let r = document, e = r.createElement("script"), o = (d) => {
    var _a2;
    (_a2 = t.onReady) == null ? void 0 : _a2.call(t, { id: n, script: e }), e.removeEventListener("load", o);
  };
  if (e.addEventListener("load", o), window.dataLayer = window.dataLayer ?? [], (_a = window.dataLayer) == null ? void 0 : _a.push({ event: "gtm.js", "gtm.start": (/* @__PURE__ */ new Date()).getTime() }), !n)
    return e;
  e.async = !t.defer, e.defer = !!(t.defer || t.compatibility), t.nonce && (e.nonce = t.nonce), t.scriptType && (e.type = t.scriptType);
  let i2 = new URLSearchParams({ id: n, ...t.queryParams ?? {} }), c2 = t.source ?? "https://www.googletagmanager.com/gtm.js";
  e.src = `${c2}?${i2}`;
  let a = t.parentElement ?? r.body;
  if (typeof (a == null ? void 0 : a.appendChild) != "function")
    throw new Error("parentElement must be a DOM element");
  return a.appendChild(e), e;
}
function m(n = "https://www.googletagmanager.com/gtm.js") {
  return Array.from(document.getElementsByTagName("script")).some((t) => t.src.includes(n));
}
var y = class {
  constructor(t) {
    __publicField(this, "id");
    __publicField(this, "options");
    __publicField(this, "scriptElements", []);
    __publicField(this, "isInBrowserContext", () => typeof window < "u");
    if (Array.isArray(t.id))
      for (let r of t.id)
        typeof r == "string" ? s(r) : s(r.id);
    else
      s(t.id);
    this.id = t.id, this.options = { enabled: true, debug: false, loadScript: true, defer: false, compatibility: false, ...t }, delete this.options.id;
  }
  enabled() {
    return this.options.enabled ?? true;
  }
  enable(t = true, r) {
    if (this.options.enabled = t, this.isInBrowserContext() && t && !m(r) && this.options.loadScript)
      if (Array.isArray(this.id))
        this.id.forEach((e) => {
          let o;
          typeof e == "string" ? o = p(e, { ...this.options }) : o = p(e.id, { ...this.options, queryParams: e.queryParams }), this.scriptElements.push(o);
        });
      else {
        let e = p(this.id, { ...this.options });
        this.scriptElements.push(e);
      }
  }
  debugEnabled() {
    return this.options.debug ?? false;
  }
  debug(t) {
    this.options.debug = t;
  }
  dataLayer() {
    return this.isInBrowserContext() && this.options.enabled ? window.dataLayer = window.dataLayer ?? [] : false;
  }
  trackView(t, r, e = {}) {
    let o = this.isInBrowserContext() && (this.options.enabled ?? false);
    this.options.debug && console.log(`[GTM-Support${o ? "" : "(disabled)"}]: Dispatching TrackView`, { screenName: t, path: r }), o && (window.dataLayer = window.dataLayer ?? []).push({ ...e, event: this.options.trackViewEventProperty ?? "content-view", "content-name": r, "content-view-name": t });
  }
  trackEvent({ event: t, category: r = null, action: e = null, label: o = null, value: i2 = null, noninteraction: c2 = false, ...a } = {}) {
    let d = this.isInBrowserContext() && (this.options.enabled ?? false);
    this.options.debug && console.log(`[GTM-Support${d ? "" : "(disabled)"}]: Dispatching event`, { event: t, category: r, action: e, label: o, value: i2, ...a }), d && (window.dataLayer = window.dataLayer ?? []).push({ event: t ?? "interaction", target: r, action: e, "target-properties": o, value: i2, "interaction-type": c2, ...a });
  }
  push(t) {
    let r = this.isInBrowserContext() && (this.options.enabled ?? false);
    this.options.debug && console.log(`[GTM-Support${r ? "" : "(disabled)"}]: Dispatching event`, t), r && (window.dataLayer = window.dataLayer ?? []).push(t);
  }
};

// node_modules/@gtm-support/vue-gtm/dist/index.js
var i;
function c(a, t = { id: "" }) {
  t = { trackOnNextTick: false, ...t }, i = new y(t), a.config.globalProperties.$gtm = i, i.isInBrowserContext() && (t.vueRouter && G(a, t.vueRouter, t.ignoredViews, t.trackOnNextTick, t.vueRouterAdditionalEventData), i.options.enabled && i.options.loadScript && (Array.isArray(t.id) ? t.id.forEach((r) => {
    if (typeof r == "string")
      p(r, t);
    else {
      let n = { ...t };
      r.queryParams != null && (n.queryParams = { ...n.queryParams, ...r.queryParams }), p(r.id, n);
    }
  }) : p(t.id, t))), a.provide("gtm", t);
}
function G(a, t, r = [], n, f = () => ({})) {
  function l2(e, u) {
    return e instanceof Error ? !!(e.type & u) : false;
  }
  t.afterEach(async (e, u, p2) => {
    var _a, _b, _c;
    if (typeof e.name != "string" || Array.isArray(r) && r.includes(e.name) || typeof r == "function" && r(e, u))
      return;
    let s2 = e.meta && typeof e.meta.gtm == "string" && e.meta.gtm ? e.meta.gtm : e.name;
    l2(p2, 4) ? (i == null ? void 0 : i.debugEnabled()) && console.log(`[VueGtm]: '${s2}' not tracked due to navigation aborted`) : l2(p2, 8) && (i == null ? void 0 : i.debugEnabled()) && console.log(`[VueGtm]: '${s2}' not tracked due to navigation cancelled`);
    let d = { ...await f(e, u), ...(_a = e.meta) == null ? void 0 : _a.gtmAdditionalEventData }, o = ((_c = (_b = t.options) == null ? void 0 : _b.history) == null ? void 0 : _c.base) ?? "";
    o.endsWith("/") || (o += "/"), o += e.fullPath.startsWith("/") ? e.fullPath.substring(1) : e.fullPath, n ? nextTick(() => {
      i == null ? void 0 : i.trackView(s2, o, d);
    }) : i == null ? void 0 : i.trackView(s2, o, d);
  });
}
function N(a) {
  return { install: (t) => c(t, a) };
}
var v = { install: c };
var V = v;
function E() {
  return i;
}
export {
  y as GtmPlugin,
  y as GtmSupport,
  s as assertIsGtmId,
  N as createGtm,
  V as default,
  m as hasScript,
  p as loadScript,
  E as useGtm
};
//# sourceMappingURL=@gtm-support_vue-gtm.js.map
