import { AreaName } from './hooks/useGridTemplateArea';
declare const _default: import("vue").DefineComponent<{
    allowBodyScrollOnOverlay: {
        type: BooleanConstructor;
        default: boolean;
    };
    top: {
        type: import("vue").PropType<{
            absolute?: boolean | undefined;
            order?: number | undefined;
            fixed?: boolean | undefined;
            overlay?: boolean | undefined;
        }>;
        default: () => {
            order: number;
        };
    };
    right: {
        type: import("vue").PropType<{
            absolute?: boolean | undefined;
            order?: number | undefined;
            fixed?: boolean | undefined;
            overlay?: boolean | undefined;
        }>;
        default: () => {
            order: number;
        };
    };
    left: {
        type: import("vue").PropType<{
            absolute?: boolean | undefined;
            order?: number | undefined;
            fixed?: boolean | undefined;
            overlay?: boolean | undefined;
        }>;
        default: () => {
            order: number;
        };
    };
    bottom: {
        type: import("vue").PropType<{
            absolute?: boolean | undefined;
            order?: number | undefined;
            fixed?: boolean | undefined;
            overlay?: boolean | undefined;
        }>;
        default: () => {
            order: number;
        };
    };
}, {
    areaNames: AreaName[];
    templateArea: import("vue").ComputedRef<string>;
    verticalTemplate: import("vue").ComputedRef<string>;
    horizontalTemplate: import("vue").ComputedRef<string>;
    paddings: import("vue").ComputedRef<{
        top: number;
        right: number;
        bottom: number;
        left: number;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("top-overlay-click" | "left-overlay-click" | "right-overlay-click" | "bottom-overlay-click")[], "top-overlay-click" | "left-overlay-click" | "right-overlay-click" | "bottom-overlay-click", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    allowBodyScrollOnOverlay: {
        type: BooleanConstructor;
        default: boolean;
    };
    top: {
        type: import("vue").PropType<{
            absolute?: boolean | undefined;
            order?: number | undefined;
            fixed?: boolean | undefined;
            overlay?: boolean | undefined;
        }>;
        default: () => {
            order: number;
        };
    };
    right: {
        type: import("vue").PropType<{
            absolute?: boolean | undefined;
            order?: number | undefined;
            fixed?: boolean | undefined;
            overlay?: boolean | undefined;
        }>;
        default: () => {
            order: number;
        };
    };
    left: {
        type: import("vue").PropType<{
            absolute?: boolean | undefined;
            order?: number | undefined;
            fixed?: boolean | undefined;
            overlay?: boolean | undefined;
        }>;
        default: () => {
            order: number;
        };
    };
    bottom: {
        type: import("vue").PropType<{
            absolute?: boolean | undefined;
            order?: number | undefined;
            fixed?: boolean | undefined;
            overlay?: boolean | undefined;
        }>;
        default: () => {
            order: number;
        };
    };
}>> & {
    "onTop-overlay-click"?: ((...args: any[]) => any) | undefined;
    "onLeft-overlay-click"?: ((...args: any[]) => any) | undefined;
    "onRight-overlay-click"?: ((...args: any[]) => any) | undefined;
    "onBottom-overlay-click"?: ((...args: any[]) => any) | undefined;
}, {
    left: {
        absolute?: boolean | undefined;
        order?: number | undefined;
        fixed?: boolean | undefined;
        overlay?: boolean | undefined;
    };
    right: {
        absolute?: boolean | undefined;
        order?: number | undefined;
        fixed?: boolean | undefined;
        overlay?: boolean | undefined;
    };
    top: {
        absolute?: boolean | undefined;
        order?: number | undefined;
        fixed?: boolean | undefined;
        overlay?: boolean | undefined;
    };
    bottom: {
        absolute?: boolean | undefined;
        order?: number | undefined;
        fixed?: boolean | undefined;
        overlay?: boolean | undefined;
    };
    allowBodyScrollOnOverlay: boolean;
}, {}>;
export default _default;
