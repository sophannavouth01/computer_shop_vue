{"version":3,"file":"VaTextarea.vue_vue_type_script_lang.mjs","sources":["../../../../../src/components/va-textarea/VaTextarea.vue"],"sourcesContent":["<template>\n  <VaInputWrapper\n    class=\"va-textarea\"\n    v-bind=\"vaInputWrapperProps\"\n    :error=\"computedError\"\n    :error-messages=\"computedErrorMessages\"\n  >\n    <div class=\"va-textarea__resize-wrapper\" :class=\"{\n      'va-textarea__resize-wrapper--resizable': isResizable,\n    }\">\n      <textarea\n        v-model=\"valueComputed\"\n        v-bind=\"{ ...computedProps, ...listeners, ...validationAriaAttributes }\"\n        :style=\"computedStyle\"\n        :rows=\"computedRowsCount\"\n        :loading=\"isLoading\"\n        ref=\"textarea\"\n        :ariaLabel=\"$props.label\"\n        class=\"va-textarea__textarea\"\n        @focus=\"validationListeners.onFocus\"\n        @blur=\"validationListeners.onBlur\"\n      />\n    </div>\n  </VaInputWrapper>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, CSSProperties, shallowRef } from 'vue'\nimport pick from 'lodash/pick.js'\nimport { VaInputWrapper } from '../va-input-wrapper'\n\nimport { useFormFieldProps, useEmitProxy, useStateful, useStatefulProps, useValidation, useValidationProps, useValidationEmits } from '../../composables'\nimport { extractComponentProps, filterComponentProps } from '../../utils/component-options'\nimport { blurElement, focusElement } from '../../utils/focus'\n\nconst positiveNumberValidator = (val: number) => {\n  if (val > 0 && (val | 0) === val) {\n    return true\n  }\n  throw new Error(`\\`minRows|maxRows\\` must be a positive integer greater than 0, but ${val} is provided`)\n}\n\nconst { createEmits, createListeners } = useEmitProxy([\n  'input', 'change', 'click', 'update:modelValue',\n])\n\nconst VaInputWrapperProps = extractComponentProps(VaInputWrapper)\n\nexport default defineComponent({\n  name: 'VaTextarea',\n\n  components: { VaInputWrapper },\n\n  props: {\n    ...useFormFieldProps,\n    ...VaInputWrapperProps,\n    ...useStatefulProps,\n    ...useValidationProps,\n    modelValue: { type: [String, Number], default: '' },\n    placeholder: { type: String },\n    autosize: { type: Boolean, default: false },\n    minRows: {\n      type: Number,\n      default: 1,\n      validator: positiveNumberValidator,\n    },\n    maxRows: {\n      type: Number,\n      validator: positiveNumberValidator,\n    },\n    resize: {\n      type: Boolean,\n      default: true,\n    },\n    clearValue: {\n      type: [String],\n      default: '',\n    },\n  },\n\n  emits: [...createEmits(), ...useValidationEmits],\n\n  setup (props, { emit }) {\n    const textarea = shallowRef<HTMLTextAreaElement>()\n    const { valueComputed } = useStateful(props, emit, 'modelValue', {\n      defaultValue: '',\n    })\n\n    const focus = () => {\n      focusElement(textarea.value)\n    }\n\n    const blur = () => {\n      blurElement(textarea.value)\n    }\n\n    const reset = () => withoutValidation(() => {\n      emit('update:modelValue', props.clearValue)\n      emit('clear')\n      resetValidation()\n    })\n\n    const {\n      computedError,\n      computedErrorMessages,\n      listeners: validationListeners,\n      validationAriaAttributes,\n      isLoading,\n      resetValidation,\n      withoutValidation,\n    } = useValidation(props, emit, {\n      value: valueComputed,\n      focus,\n      reset,\n    })\n\n    const isResizable = computed(() => {\n      return props.resize && !props.autosize\n    })\n\n    const computedRowsCount = computed<number | undefined>(() => {\n      if (!props.autosize) {\n        return undefined\n      }\n\n      const rows = valueComputed.value ? valueComputed.value.toString().split('\\n').length : 1\n\n      if (!props.maxRows) {\n        return rows\n      }\n\n      return Math.max(props.minRows, Math.min(rows, props.maxRows))\n    })\n\n    const computedStyle = computed(() => ({\n      resize: isResizable.value ? undefined : 'none',\n    }) as CSSProperties)\n\n    const computedProps = computed(() => ({\n      ...pick(props, ['disabled', 'readonly', 'placeholder', 'ariaLabel']),\n    }))\n\n    return {\n      isResizable,\n      validationListeners,\n      validationAriaAttributes,\n      computedError,\n      computedErrorMessages,\n      isLoading,\n      computedRowsCount,\n      valueComputed,\n      vaInputWrapperProps: filterComponentProps(VaInputWrapperProps),\n      textarea,\n      computedStyle,\n      listeners: createListeners(emit),\n      computedProps,\n      focus,\n      blur,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import '../../styles/resources/index.scss';\n\n.va-textarea {\n  .va-input-wrapper__field {\n    padding-top: 12px;\n    padding-bottom: 12px;\n    align-items: flex-start;\n  }\n\n  &__resize-wrapper {\n    display: flex;\n    overflow: hidden;\n    width: 100%;\n    align-self: stretch;\n\n    &--resizable {\n      resize: vertical;\n    }\n  }\n\n  &__textarea {\n    border: 0;\n    flex: 1;\n    font-family: var(--va-font-family);\n    width: 100%;\n    padding: 1px 0;\n    margin: -1px 0;\n    background: transparent;\n    color: currentColor;\n    box-sizing: content-box;\n    min-height: 1.15rem;\n    outline: none;\n    position: relative;\n    resize: none;\n\n    @include va-scroll(var(--va-secondary));\n  }\n}\n</style>\n"],"names":[],"mappings":"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"}