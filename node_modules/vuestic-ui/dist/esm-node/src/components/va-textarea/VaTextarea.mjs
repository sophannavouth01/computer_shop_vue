import { _ as _sfc_main } from "./VaTextarea.vue_vue_type_script_lang.mjs";
import { resolveComponent, openBlock, createBlock, mergeProps, withCtx, createElementVNode, normalizeClass, withDirectives, vModelText } from "vue";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.mjs";
const VaTextarea_vue_vue_type_style_index_0_lang = "";
const _hoisted_1 = ["rows", "loading", "ariaLabel"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_VaInputWrapper = resolveComponent("VaInputWrapper");
  return openBlock(), createBlock(_component_VaInputWrapper, mergeProps({ class: "va-textarea" }, _ctx.vaInputWrapperProps, {
    error: _ctx.computedError,
    "error-messages": _ctx.computedErrorMessages
  }), {
    default: withCtx(() => [
      createElementVNode("div", {
        class: normalizeClass(["va-textarea__resize-wrapper", {
          "va-textarea__resize-wrapper--resizable": _ctx.isResizable
        }])
      }, [
        withDirectives(createElementVNode("textarea", mergeProps({
          "onUpdate:modelValue": _cache[0] || (_cache[0] = ($event) => _ctx.valueComputed = $event)
        }, { ..._ctx.computedProps, ..._ctx.listeners, ..._ctx.validationAriaAttributes }, {
          style: _ctx.computedStyle,
          rows: _ctx.computedRowsCount,
          loading: _ctx.isLoading,
          ref: "textarea",
          ariaLabel: _ctx.$props.label,
          class: "va-textarea__textarea",
          onFocus: _cache[1] || (_cache[1] = (...args) => _ctx.validationListeners.onFocus && _ctx.validationListeners.onFocus(...args)),
          onBlur: _cache[2] || (_cache[2] = (...args) => _ctx.validationListeners.onBlur && _ctx.validationListeners.onBlur(...args))
        }), null, 16, _hoisted_1), [
          [vModelText, _ctx.valueComputed]
        ])
      ], 2)
    ]),
    _: 1
  }, 16, ["error", "error-messages"]);
}
const _VaTextarea = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  _VaTextarea as _
};
//# sourceMappingURL=VaTextarea.mjs.map
