import { _ as _sfc_main } from "./VaInputLabel.vue_vue_type_script_lang.mjs";
import { openBlock, createElementBlock, normalizeStyle, renderSlot, normalizeProps, guardReactiveProps, createTextVNode, toDisplayString, createCommentVNode } from "vue";
import { _ as _export_sfc } from "../../../../plugin-vue_export-helper.mjs";
const VaInputLabel_vue_vue_type_style_index_0_lang = "";
const _hoisted_1 = {
  key: 0,
  class: "va-input-label__required-mark"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("label", {
    "aria-hidden": "true",
    class: "va-input-label",
    style: normalizeStyle({ color: _ctx.getColor(_ctx.$props.color, void 0, true) })
  }, [
    renderSlot(_ctx.$slots, "default", normalizeProps(guardReactiveProps({ label: _ctx.label, requiredMark: _ctx.requiredMark, color: _ctx.getColor(_ctx.$props.color) })), () => [
      createTextVNode(toDisplayString(_ctx.label) + " ", 1),
      _ctx.requiredMark ? (openBlock(), createElementBlock("span", _hoisted_1, " * ")) : createCommentVNode("", true)
    ])
  ], 4);
}
const VaInputLabel = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  VaInputLabel as V
};
//# sourceMappingURL=VaInputLabel.mjs.map
