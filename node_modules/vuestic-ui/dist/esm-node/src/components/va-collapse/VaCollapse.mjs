import { _ as _sfc_main } from "./VaCollapse.vue_vue_type_script_lang.mjs";
import { resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, withKeys, renderSlot, normalizeProps, guardReactiveProps, mergeProps, createBlock, createCommentVNode, toDisplayString, createVNode, normalizeStyle } from "vue";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.mjs";
const VaCollapse_vue_vue_type_style_index_0_lang = "";
const _hoisted_1 = { class: "va-collapse__header__text" };
const _hoisted_2 = ["id", "aria-labelledby"];
const _hoisted_3 = { class: "va-collapse__content" };
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_va_icon = resolveComponent("va-icon");
  return openBlock(), createElementBlock("div", {
    class: normalizeClass(["va-collapse", _ctx.computedClasses])
  }, [
    createElementVNode("div", {
      class: "va-collapse__header-wrapper",
      role: "heading",
      onClick: _cache[0] || (_cache[0] = (...args) => _ctx.toggle && _ctx.toggle(...args)),
      onKeydown: [
        _cache[1] || (_cache[1] = withKeys((...args) => _ctx.toggle && _ctx.toggle(...args), ["enter"])),
        _cache[2] || (_cache[2] = withKeys((...args) => _ctx.toggle && _ctx.toggle(...args), ["space"]))
      ]
    }, [
      renderSlot(_ctx.$slots, "header", normalizeProps(guardReactiveProps({
        value: _ctx.computedModelValue,
        bind: _ctx.headerAttributes,
        attributes: _ctx.headerAttributes,
        attrs: _ctx.headerAttributes,
        iconAttrs: {
          class: [
            "va-collapse__expand-icon",
            _ctx.computedModelValue ? "a-collapse__expand-icon--expanded" : "a-collapse__expand-icon--collapsed"
          ]
        },
        text: _ctx.header
      })), () => [
        createElementVNode("div", mergeProps(_ctx.headerAttributes, {
          class: "va-collapse__header",
          style: _ctx.headerStyle
        }), [
          _ctx.icon ? (openBlock(), createBlock(_component_va_icon, {
            key: 0,
            class: "va-collapse__header__icon",
            name: _ctx.icon
          }, null, 8, ["name"])) : createCommentVNode("", true),
          renderSlot(_ctx.$slots, "header-content", normalizeProps(guardReactiveProps({ header: _ctx.header })), () => [
            createElementVNode("div", _hoisted_1, toDisplayString(_ctx.header), 1)
          ]),
          renderSlot(_ctx.$slots, "expand-icon", {}, () => [
            createVNode(_component_va_icon, {
              class: normalizeClass(["va-collapse__expand-icon", _ctx.computedModelValue ? "va-collapse__expand-icon--expanded" : "va-collapse__expand-icon--collapsed"]),
              name: "va-arrow-down"
            }, null, 8, ["class"])
          ])
        ], 16)
      ])
    ], 32),
    createElementVNode("div", {
      class: normalizeClass(["va-collapse__body-wrapper", {
        "va-collapse__body-wrapper--bordered": !_ctx.$slots.body && !_ctx.$slots.header
      }]),
      style: normalizeStyle(_ctx.contentStyle),
      onTransitionend: _cache[3] || (_cache[3] = (...args) => _ctx.onTransitionEnd && _ctx.onTransitionEnd(...args))
    }, [
      createElementVNode("div", {
        class: "va-collapse__body",
        ref: "body",
        role: "region",
        id: _ctx.panelIdComputed,
        "aria-labelledby": _ctx.headerIdComputed
      }, [
        renderSlot(_ctx.$slots, "body", {}, () => [
          createElementVNode("div", _hoisted_3, [
            renderSlot(_ctx.$slots, "default", {}, () => [
              renderSlot(_ctx.$slots, "content")
            ])
          ])
        ])
      ], 8, _hoisted_2)
    ], 38)
  ], 2);
}
const _VaCollapse = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  _VaCollapse as _
};
//# sourceMappingURL=VaCollapse.mjs.map
