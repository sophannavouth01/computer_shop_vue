{"version":3,"file":"VaSelectContent.vue_vue_type_script_lang.mjs","sources":["../../../../../../../src/components/va-select/components/VaSelectContent/VaSelectContent.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"$props.autocomplete\"\n    class=\"va-select-content__autocomplete\"\n  >\n    <slot\n      v-if=\"$props.multiple || $slots.content\"\n      name=\"content\"\n      v-bind=\"{\n        value: $props.value,\n        valueString: $props.valueString,\n        tabindex: $props.tabindex,\n        ariaAttributes,\n      }\"\n    >\n      <template v-if=\"value.length\">\n        <span\n          v-for=\"(option, index) in value\"\n          :key=\"$props.getText(option)\"\n        >\n          <va-icon\n            v-if=\"getIcon(option)\"\n            size=\"small\"\n            class=\"va-select-option__icon\"\n            :name=\"getIcon(option)\"\n          />\n          {{ `${$props.getText(option)}${index + 1 === value.length ? '' : ', '}` }}\n        </span>\n      </template>\n\n      <template v-else>\n        {{ $props.valueString }}\n      </template>\n    </slot>\n\n    <input\n      v-bind=\"ariaAttributes\"\n      ref=\"autocompleteInput\"\n      v-model=\"autocompleteInputValueComputed\"\n      :placeholder=\"$props.placeholder\"\n      :disabled=\"$props.disabled\"\n      :readonly=\"$props.readonly\"\n      autocomplete=\"off\"\n      aria-autocomplete=\"list\"\n      @keydown.up.stop.prevent=\"$emit('focus-prev')\"\n      @keydown.down.stop.prevent=\"$emit('focus-next')\"\n      @keydown.enter.stop.prevent=\"$emit('select-option')\"\n      @keydown=\"handleBackspace\"\n    />\n  </div>\n\n  <span\n    v-else-if=\"isPlaceholder\"\n    class=\"va-select-content__placeholder\"\n  >\n   <input v-bind=\"ariaAttributes\" :placeholder=\"$props.placeholder\" readonly />\n  </span>\n\n  <slot\n    v-else\n    name=\"content\"\n    v-bind=\"{\n      valueString: $props.valueString,\n      value: $props.value,\n      tabindex: $props.tabindex,\n      ariaAttributes,\n    }\"\n  >\n    <va-icon\n      v-if=\"getIcon(value[0])\"\n      size=\"small\"\n      class=\"va-select-option__icon\"\n      :name=\"getIcon(value[0])\"\n    />\n    {{ $props.valueString }}\n  </slot>\n\n  <slot\n    name=\"hiddenOptionsBadge\"\n    v-bind=\"{\n      amount: $props.hiddenSelectedOptionsAmount,\n      isShown: $props.isAllOptionsShown,\n      toggle: toggleHiddenOptionsState,\n    }\"\n  >\n    <va-badge\n      v-if=\"$props.hiddenSelectedOptionsAmount && !$props.isAllOptionsShown\"\n      class=\"va-select-content__state-icon\"\n      color=\"info\"\n      :text=\"`+${$props.hiddenSelectedOptionsAmount}`\"\n      :tabindex=\"$props.tabindex\"\n      @click.stop=\"toggleHiddenOptionsState\"\n    />\n  </slot>\n\n  <slot\n    name=\"hideOptionsButton\"\n    v-bind=\"{\n      isShown: $props.isAllOptionsShown,\n      toggle: toggleHiddenOptionsState,\n    }\"\n  >\n    <va-icon\n      v-if=\"$props.isAllOptionsShown\"\n      role=\"button\"\n      class=\"va-select-content__state-icon\"\n      size=\"small\"\n      name=\"reply\"\n      :tabindex=\"$props.tabindex\"\n      @click.stop=\"toggleHiddenOptionsState\"\n    />\n  </slot>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, toRefs, computed, watch, onMounted, type PropType } from 'vue'\n\nimport { useFormFieldProps } from '../../../../composables'\n\nimport { VaIcon } from '../../../va-icon'\nimport { VaBadge } from '../../../va-badge'\n\nimport type { SelectOption } from '../../../index'\n\nexport default defineComponent({\n  name: 'VaSelectContent',\n\n  components: { VaBadge, VaIcon },\n\n  props: {\n    ...useFormFieldProps,\n\n    ariaAttributes: { type: Object },\n    value: { type: Array as PropType<SelectOption[]>, required: true },\n    valueString: { type: String },\n    placeholder: { type: String, default: '' },\n    tabindex: { type: [String, Number], default: 0 },\n    hiddenSelectedOptionsAmount: { type: Number, default: 0 },\n    isAllOptionsShown: { type: Boolean, default: false },\n    autocomplete: { type: Boolean, default: false },\n    focused: { type: Boolean, default: false },\n    multiple: { type: Boolean, default: false },\n    getText: { type: Function as PropType<(option: SelectOption) => string>, required: true },\n    autocompleteInputValue: { type: String, default: '' },\n  },\n\n  emits: ['toggle-hidden', 'autocomplete-input', 'focus-prev', 'focus-next', 'select-option', 'delete-last-selected'],\n\n  setup (props, { emit }) {\n    const autocompleteInput = ref<HTMLInputElement>()\n\n    const isPlaceholder = computed(() => props.placeholder && !props.valueString)\n\n    const toggleHiddenOptionsState = () => emit('toggle-hidden')\n\n    const { value, focused } = toRefs(props)\n\n    const autocompleteInputValueComputed = computed({\n      get: () => props.autocompleteInputValue,\n      set: (v: string) => emit('autocomplete-input', v),\n    })\n\n    onMounted(() => {\n      if (props.multiple) { return }\n      if (!props.autocomplete) { return }\n\n      autocompleteInputValueComputed.value = props.valueString as string\n    })\n\n    watch(focused, (newValue) => {\n      if (!props.autocomplete || !newValue) { return }\n\n      if (autocompleteInputValueComputed.value) {\n        // native select method doesn't work in mobile Safari, so we need this instead\n        autocompleteInput.value?.setSelectionRange(0, autocompleteInputValueComputed.value.length)\n      } else {\n        autocompleteInput.value?.focus()\n      }\n    })\n\n    const handleBackspace = (e: KeyboardEvent) => {\n      if (props.multiple && value.value.length && e.key === 'Backspace' && !autocompleteInputValueComputed.value) {\n        emit('delete-last-selected')\n      }\n    }\n\n    return {\n      getIcon: (option: SelectOption) => typeof option === 'object' ? (option.icon as string) : undefined,\n      isPlaceholder,\n      toggleHiddenOptionsState,\n      autocompleteInputValueComputed,\n      autocompleteInput,\n      handleBackspace,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import '../../variables';\n\n.va-select-content {\n  &__autocomplete {\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--va-select-content-autocomplete-gap);\n    color: var(--va-select-content-autocomplete-color);\n    font-size: var(--va-input-font-size);\n    line-height: var(--va-select-content-autocomplete-line-height);\n\n    & input {\n      flex: 1 1;\n    }\n  }\n\n  &__placeholder {\n    overflow: hidden !important;\n    flex: 1;\n    line-height: normal;\n    color: var(--va-input-placeholder-text-color);\n    text-overflow: ellipsis !important;\n    white-space: nowrap !important;\n  }\n\n  &__state-icon {\n    margin-left: var(--va-select-state-icon-margin-left);\n  }\n}\n</style>\n"],"names":[],"mappings":";;;;AA4HA,MAAA,YAAe,gBAAgB;AAAA,EAC7B,MAAM;AAAA,EAEN,YAAY,EAAE,SAAS,OAAO;AAAA,EAE9B,OAAO;AAAA,IACL,GAAG;AAAA,IAEH,gBAAgB,EAAE,MAAM,OAAO;AAAA,IAC/B,OAAO,EAAE,MAAM,OAAmC,UAAU,KAAK;AAAA,IACjE,aAAa,EAAE,MAAM,OAAO;AAAA,IAC5B,aAAa,EAAE,MAAM,QAAQ,SAAS,GAAG;AAAA,IACzC,UAAU,EAAE,MAAM,CAAC,QAAQ,MAAM,GAAG,SAAS,EAAE;AAAA,IAC/C,6BAA6B,EAAE,MAAM,QAAQ,SAAS,EAAE;AAAA,IACxD,mBAAmB,EAAE,MAAM,SAAS,SAAS,MAAM;AAAA,IACnD,cAAc,EAAE,MAAM,SAAS,SAAS,MAAM;AAAA,IAC9C,SAAS,EAAE,MAAM,SAAS,SAAS,MAAM;AAAA,IACzC,UAAU,EAAE,MAAM,SAAS,SAAS,MAAM;AAAA,IAC1C,SAAS,EAAE,MAAM,UAAwD,UAAU,KAAK;AAAA,IACxF,wBAAwB,EAAE,MAAM,QAAQ,SAAS,GAAG;AAAA,EACtD;AAAA,EAEA,OAAO,CAAC,iBAAiB,sBAAsB,cAAc,cAAc,iBAAiB,sBAAsB;AAAA,EAElH,MAAO,OAAO,EAAE,QAAQ;AACtB,UAAM,oBAAoB;AAE1B,UAAM,gBAAgB,SAAS,MAAM,MAAM,eAAe,CAAC,MAAM,WAAW;AAEtE,UAAA,2BAA2B,MAAM,KAAK,eAAe;AAE3D,UAAM,EAAE,OAAO,QAAQ,IAAI,OAAO,KAAK;AAEvC,UAAM,iCAAiC,SAAS;AAAA,MAC9C,KAAK,MAAM,MAAM;AAAA,MACjB,KAAK,CAAC,MAAc,KAAK,sBAAsB,CAAC;AAAA,IAAA,CACjD;AAED,cAAU,MAAM;AACd,UAAI,MAAM,UAAU;AAAE;AAAA,MAAO;AACzB,UAAA,CAAC,MAAM,cAAc;AAAE;AAAA,MAAO;AAElC,qCAA+B,QAAQ,MAAM;AAAA,IAAA,CAC9C;AAEK,UAAA,SAAS,CAAC,aAAa;;AAC3B,UAAI,CAAC,MAAM,gBAAgB,CAAC,UAAU;AAAE;AAAA,MAAO;AAE/C,UAAI,+BAA+B,OAAO;AAExC,gCAAkB,UAAlB,mBAAyB,kBAAkB,GAAG,+BAA+B,MAAM;AAAA,MAAM,OACpF;AACL,gCAAkB,UAAlB,mBAAyB;AAAA,MAC3B;AAAA,IAAA,CACD;AAEK,UAAA,kBAAkB,CAAC,MAAqB;AACxC,UAAA,MAAM,YAAY,MAAM,MAAM,UAAU,EAAE,QAAQ,eAAe,CAAC,+BAA+B,OAAO;AAC1G,aAAK,sBAAsB;AAAA,MAC7B;AAAA,IAAA;AAGK,WAAA;AAAA,MACL,SAAS,CAAC,WAAyB,OAAO,WAAW,WAAY,OAAO,OAAkB;AAAA,MAC1F;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA;AAAA,EAEJ;AACF,CAAC;"}