{"version":3,"file":"VaSelectContent.mjs","sources":["../../../../../../../src/components/va-select/components/VaSelectContent/VaSelectContent.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"$props.autocomplete\"\n    class=\"va-select-content__autocomplete\"\n  >\n    <slot\n      v-if=\"$props.multiple || $slots.content\"\n      name=\"content\"\n      v-bind=\"{\n        value: $props.value,\n        valueString: $props.valueString,\n        tabindex: $props.tabindex,\n        ariaAttributes,\n      }\"\n    >\n      <template v-if=\"value.length\">\n        <span\n          v-for=\"(option, index) in value\"\n          :key=\"$props.getText(option)\"\n        >\n          <va-icon\n            v-if=\"getIcon(option)\"\n            size=\"small\"\n            class=\"va-select-option__icon\"\n            :name=\"getIcon(option)\"\n          />\n          {{ `${$props.getText(option)}${index + 1 === value.length ? '' : ', '}` }}\n        </span>\n      </template>\n\n      <template v-else>\n        {{ $props.valueString }}\n      </template>\n    </slot>\n\n    <input\n      v-bind=\"ariaAttributes\"\n      ref=\"autocompleteInput\"\n      v-model=\"autocompleteInputValueComputed\"\n      :placeholder=\"$props.placeholder\"\n      :disabled=\"$props.disabled\"\n      :readonly=\"$props.readonly\"\n      autocomplete=\"off\"\n      aria-autocomplete=\"list\"\n      @keydown.up.stop.prevent=\"$emit('focus-prev')\"\n      @keydown.down.stop.prevent=\"$emit('focus-next')\"\n      @keydown.enter.stop.prevent=\"$emit('select-option')\"\n      @keydown=\"handleBackspace\"\n    />\n  </div>\n\n  <span\n    v-else-if=\"isPlaceholder\"\n    class=\"va-select-content__placeholder\"\n  >\n   <input v-bind=\"ariaAttributes\" :placeholder=\"$props.placeholder\" readonly />\n  </span>\n\n  <slot\n    v-else\n    name=\"content\"\n    v-bind=\"{\n      valueString: $props.valueString,\n      value: $props.value,\n      tabindex: $props.tabindex,\n      ariaAttributes,\n    }\"\n  >\n    <va-icon\n      v-if=\"getIcon(value[0])\"\n      size=\"small\"\n      class=\"va-select-option__icon\"\n      :name=\"getIcon(value[0])\"\n    />\n    {{ $props.valueString }}\n  </slot>\n\n  <slot\n    name=\"hiddenOptionsBadge\"\n    v-bind=\"{\n      amount: $props.hiddenSelectedOptionsAmount,\n      isShown: $props.isAllOptionsShown,\n      toggle: toggleHiddenOptionsState,\n    }\"\n  >\n    <va-badge\n      v-if=\"$props.hiddenSelectedOptionsAmount && !$props.isAllOptionsShown\"\n      class=\"va-select-content__state-icon\"\n      color=\"info\"\n      :text=\"`+${$props.hiddenSelectedOptionsAmount}`\"\n      :tabindex=\"$props.tabindex\"\n      @click.stop=\"toggleHiddenOptionsState\"\n    />\n  </slot>\n\n  <slot\n    name=\"hideOptionsButton\"\n    v-bind=\"{\n      isShown: $props.isAllOptionsShown,\n      toggle: toggleHiddenOptionsState,\n    }\"\n  >\n    <va-icon\n      v-if=\"$props.isAllOptionsShown\"\n      role=\"button\"\n      class=\"va-select-content__state-icon\"\n      size=\"small\"\n      name=\"reply\"\n      :tabindex=\"$props.tabindex\"\n      @click.stop=\"toggleHiddenOptionsState\"\n    />\n  </slot>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, toRefs, computed, watch, onMounted, type PropType } from 'vue'\n\nimport { useFormFieldProps } from '../../../../composables'\n\nimport { VaIcon } from '../../../va-icon'\nimport { VaBadge } from '../../../va-badge'\n\nimport type { SelectOption } from '../../../index'\n\nexport default defineComponent({\n  name: 'VaSelectContent',\n\n  components: { VaBadge, VaIcon },\n\n  props: {\n    ...useFormFieldProps,\n\n    ariaAttributes: { type: Object },\n    value: { type: Array as PropType<SelectOption[]>, required: true },\n    valueString: { type: String },\n    placeholder: { type: String, default: '' },\n    tabindex: { type: [String, Number], default: 0 },\n    hiddenSelectedOptionsAmount: { type: Number, default: 0 },\n    isAllOptionsShown: { type: Boolean, default: false },\n    autocomplete: { type: Boolean, default: false },\n    focused: { type: Boolean, default: false },\n    multiple: { type: Boolean, default: false },\n    getText: { type: Function as PropType<(option: SelectOption) => string>, required: true },\n    autocompleteInputValue: { type: String, default: '' },\n  },\n\n  emits: ['toggle-hidden', 'autocomplete-input', 'focus-prev', 'focus-next', 'select-option', 'delete-last-selected'],\n\n  setup (props, { emit }) {\n    const autocompleteInput = ref<HTMLInputElement>()\n\n    const isPlaceholder = computed(() => props.placeholder && !props.valueString)\n\n    const toggleHiddenOptionsState = () => emit('toggle-hidden')\n\n    const { value, focused } = toRefs(props)\n\n    const autocompleteInputValueComputed = computed({\n      get: () => props.autocompleteInputValue,\n      set: (v: string) => emit('autocomplete-input', v),\n    })\n\n    onMounted(() => {\n      if (props.multiple) { return }\n      if (!props.autocomplete) { return }\n\n      autocompleteInputValueComputed.value = props.valueString as string\n    })\n\n    watch(focused, (newValue) => {\n      if (!props.autocomplete || !newValue) { return }\n\n      if (autocompleteInputValueComputed.value) {\n        // native select method doesn't work in mobile Safari, so we need this instead\n        autocompleteInput.value?.setSelectionRange(0, autocompleteInputValueComputed.value.length)\n      } else {\n        autocompleteInput.value?.focus()\n      }\n    })\n\n    const handleBackspace = (e: KeyboardEvent) => {\n      if (props.multiple && value.value.length && e.key === 'Backspace' && !autocompleteInputValueComputed.value) {\n        emit('delete-last-selected')\n      }\n    }\n\n    return {\n      getIcon: (option: SelectOption) => typeof option === 'object' ? (option.icon as string) : undefined,\n      isPlaceholder,\n      toggleHiddenOptionsState,\n      autocompleteInputValueComputed,\n      autocompleteInput,\n      handleBackspace,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import '../../variables';\n\n.va-select-content {\n  &__autocomplete {\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--va-select-content-autocomplete-gap);\n    color: var(--va-select-content-autocomplete-color);\n    font-size: var(--va-input-font-size);\n    line-height: var(--va-select-content-autocomplete-line-height);\n\n    & input {\n      flex: 1 1;\n    }\n  }\n\n  &__placeholder {\n    overflow: hidden !important;\n    flex: 1;\n    line-height: normal;\n    color: var(--va-input-placeholder-text-color);\n    text-overflow: ellipsis !important;\n    white-space: nowrap !important;\n  }\n\n  &__state-icon {\n    margin-left: var(--va-select-state-icon-margin-left);\n  }\n}\n</style>\n"],"names":["_openBlock","_createElementBlock","_Fragment","_renderSlot","_normalizeProps","_mergeProps","_renderList","_createBlock","_createCommentVNode","_withDirectives","_createElementVNode","_withKeys","_withModifiers","_createTextVNode","_toDisplayString","_guardReactiveProps"],"mappings":"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"}