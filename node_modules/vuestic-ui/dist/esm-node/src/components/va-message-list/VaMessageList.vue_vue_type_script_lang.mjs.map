{"version":3,"file":"VaMessageList.vue_vue_type_script_lang.mjs","sources":["../../../../../src/components/va-message-list/VaMessageList.vue"],"sourcesContent":["<template>\n  <WithAttributes>\n    <slot v-bind=\"{ ariaAttributes: childAttributes, messages }\" />\n  </WithAttributes>\n  <slot name=\"messages\" v-bind=\"{ ariaAttributes: messageListAttributes, messages }\">\n    <div\n      v-if=\"messages.length > 0\"\n      class=\"va-message-list\"\n      :style=\"computedStyle\"\n      v-bind=\"messageListAttributes\"\n    >\n      <ul class=\"va-message-list__list\">\n        <li\n          v-for=\"(message, index) in messages\"\n          :key=\"index\"\n          class=\"va-message-list__message\"\n        >\n          <slot name=\"message\" v-bind=\"{ messages, message }\">\n            <va-icon\n              v-if=\"hasError\"\n              class=\"va-message-list__icon\"\n              name=\"va-warning\"\n              :size=\"16\"\n            />{{ message }}\n          </slot>\n        </li>\n      </ul>\n    </div>\n  </slot>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType } from 'vue'\n\nimport { useColors } from '../../composables'\n\nimport { VaIcon } from '../va-icon'\nimport { useMessageListAria } from './hooks/useMessageListAria'\nimport { WithAttributes } from '../../utils/with-attributes'\n\nexport default defineComponent({\n  name: 'VaMessageList',\n\n  components: { VaIcon, WithAttributes },\n\n  props: {\n    modelValue: {\n      type: [String, Array] as PropType<string | string[]>,\n      default: '',\n    },\n    limit: { type: Number, default: 1 },\n    color: { type: String },\n    hasError: { type: Boolean, default: false },\n  },\n\n  inheritAttrs: false,\n\n  setup (props, { slots }) {\n    const { getColor } = useColors()\n\n    const { childAttributes, messageListAttributes } = useMessageListAria(props)\n\n    return {\n      messageListAttributes,\n      childAttributes: computed(() => childAttributes.value),\n      messages: computed<string[]>(() => {\n        if (!props.modelValue) { return [] }\n        if (!Array.isArray(props.modelValue)) { return [props.modelValue] }\n        return props.modelValue.slice(0, props.limit)\n      }),\n      computedStyle: computed(() => props.color ? { color: getColor(props.color) } : {}),\n    }\n  },\n})\n\n// va-message-list must have alert role, but ul must have list role. So there is .va-message-list__list\n// is also must have class which starts with .va- so typography styles will not be applied to it.\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-message-list {\n  color: var(--va-message-list-color);\n  list-style: none;\n\n  &__message {\n    display: flex;\n    align-items: center;\n    font-size: var(--va-message-list-font-size);\n    line-height: var(--va-message-list-line-height);\n  }\n\n  &__icon {\n    margin-right: var(--va-message-list-icon-margin-right);\n  }\n}\n</style>\n"],"names":[],"mappings":";;;;;AAwCA,MAAA,YAAe,gBAAgB;AAAA,EAC7B,MAAM;AAAA,EAEN,YAAY,EAAE,QAAQ,eAAe;AAAA,EAErC,OAAO;AAAA,IACL,YAAY;AAAA,MACV,MAAM,CAAC,QAAQ,KAAK;AAAA,MACpB,SAAS;AAAA,IACX;AAAA,IACA,OAAO,EAAE,MAAM,QAAQ,SAAS,EAAE;AAAA,IAClC,OAAO,EAAE,MAAM,OAAO;AAAA,IACtB,UAAU,EAAE,MAAM,SAAS,SAAS,MAAM;AAAA,EAC5C;AAAA,EAEA,cAAc;AAAA,EAEd,MAAO,OAAO,EAAE,SAAS;AACjB,UAAA,EAAE,aAAa;AAErB,UAAM,EAAE,iBAAiB,sBAAsB,IAAI,mBAAmB,KAAK;AAEpE,WAAA;AAAA,MACL;AAAA,MACA,iBAAiB,SAAS,MAAM,gBAAgB,KAAK;AAAA,MACrD,UAAU,SAAmB,MAAM;AAC7B,YAAA,CAAC,MAAM,YAAY;AAAE,iBAAO;QAAG;AACnC,YAAI,CAAC,MAAM,QAAQ,MAAM,UAAU,GAAG;AAAS,iBAAA,CAAC,MAAM,UAAU;AAAA,QAAE;AAClE,eAAO,MAAM,WAAW,MAAM,GAAG,MAAM,KAAK;AAAA,MAAA,CAC7C;AAAA,MACD,eAAe,SAAS,MAAM,MAAM,QAAQ,EAAE,OAAO,SAAS,MAAM,KAAK,EAAE,IAAI,CAAA,CAAE;AAAA,IAAA;AAAA,EAErF;AACF,CAAC;"}