{"version":3,"file":"useMessageListAria.mjs","sources":["../../../../../../src/components/va-message-list/hooks/useMessageListAria.ts"],"sourcesContent":["import { ExtractPropTypes, PropType, Ref, computed } from 'vue'\nimport { useComponentUuid } from '../../../composables/useComponentUuid'\n\nconst ariaProps = {\n  modelValue: {\n    type: [String, Array] as PropType<string | string[]>,\n    default: '',\n  },\n  limit: { type: Number, default: 1 },\n  color: { type: String },\n  hasError: { type: Boolean, default: false },\n}\n\nexport const useMessageListAria = (props: ExtractPropTypes<typeof ariaProps>) => {\n  const id = useComponentUuid()\n\n  const messageListId = `message-list-${id}`\n\n  const messageListAttributes = computed(() => ({\n    id: messageListId,\n    role: 'alert' as const,\n  }))\n\n  const doHaveMessages = computed(() => {\n    if (typeof props.modelValue === 'string' && props.modelValue.length > 0) {\n      return true\n    }\n\n    if (Array.isArray(props.modelValue) && props.modelValue.length > 0) {\n      return true\n    }\n\n    return false\n  })\n\n  const childAttributes = computed(() => ({\n    'aria-describedby': doHaveMessages.value ? messageListId : undefined,\n    'aria-invalid': props.hasError,\n  }))\n\n  return {\n    messageListAttributes,\n    childAttributes,\n  }\n}\n"],"names":[],"mappings":";;AAaa,MAAA,qBAAqB,CAAC,UAA8C;AAC/E,QAAM,KAAK;AAEX,QAAM,gBAAgB,gBAAgB;AAEhC,QAAA,wBAAwB,SAAS,OAAO;AAAA,IAC5C,IAAI;AAAA,IACJ,MAAM;AAAA,EACN,EAAA;AAEI,QAAA,iBAAiB,SAAS,MAAM;AACpC,QAAI,OAAO,MAAM,eAAe,YAAY,MAAM,WAAW,SAAS,GAAG;AAChE,aAAA;AAAA,IACT;AAEI,QAAA,MAAM,QAAQ,MAAM,UAAU,KAAK,MAAM,WAAW,SAAS,GAAG;AAC3D,aAAA;AAAA,IACT;AAEO,WAAA;AAAA,EAAA,CACR;AAEK,QAAA,kBAAkB,SAAS,OAAO;AAAA,IACtC,oBAAoB,eAAe,QAAQ,gBAAgB;AAAA,IAC3D,gBAAgB,MAAM;AAAA,EACtB,EAAA;AAEK,SAAA;AAAA,IACL;AAAA,IACA;AAAA,EAAA;AAEJ;"}