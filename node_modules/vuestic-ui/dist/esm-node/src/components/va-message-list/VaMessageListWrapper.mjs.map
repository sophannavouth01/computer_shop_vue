{"version":3,"file":"VaMessageListWrapper.mjs","sources":["../../../../../src/components/va-message-list/VaMessageListWrapper.vue"],"sourcesContent":["<template>\n  <div class=\"va-message-list-wrapper\">\n    <va-message-list\n      :color=\"messagesColor\"\n      :limit=\"errorLimit\"\n      :has-error=\"hasError\"\n      :model-value=\"messagesComputed\"\n      :inherit-slots=\"['message']\"\n    >\n      <template #default=\"bind\">\n        <slot name=\"default\" v-bind=\"bind\" />\n      </template>\n    </va-message-list>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRef } from 'vue'\n\nimport { useValidationProps } from '../../composables'\n\nimport { VaMessageList } from './VaMessageList'\nimport { WithSlotInheritance } from '../../utils/with-slot-inheritance'\n\nexport default defineComponent({\n  name: 'VaMessageListWrapper',\n\n  components: { VaMessageList: WithSlotInheritance(VaMessageList) },\n\n  props: {\n    ...useValidationProps,\n  },\n\n  setup (props) {\n    return {\n      messagesColor: computed(() => {\n        if (props.error) { return 'danger' }\n        if (props.success) { return 'success' }\n        return ''\n      }),\n      hasError: toRef(props, 'error'),\n      messagesComputed: computed(() => props.error ? props.errorMessages : props.messages),\n      errorLimit: computed(() => props.error ? Number(props.errorCount) : 99),\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import 'variables';\n\n.va-message-list-wrapper {\n  .va-message-list {\n    margin-top: var(--va-message-wrapper-margin-top);\n  }\n}\n</style>\n"],"names":["_resolveComponent","_openBlock","_createElementBlock","_createVNode"],"mappings":";;;;;;qCACEA,iBAYM,iBAAA;AAVD,SAAAC,UAAoB,GAAAC,mBAAA,OAAA,YAAA;AAAA,IAAAC,YACb,4BAAU;AAAA,MACjB,OAAS,KAAA;AAAA,MACT,OAAA,KAAA;AAAA,MACA,aAAe,KAAA;AAAA,MAAA,eAAA,KAAA;AAAA,MAEL,iBAAO,CAChB,SADsB;AAAA,IAAA,GAAA;AAAA;;;;;;;;"}