import { defineComponent } from "vue";
import { u as useView } from "../../hooks/view.mjs";
import { V as VaButton } from "../../../va-button/index.mjs";
import { u as useElementTextColor } from "../../../../composables/useElementTextColor.mjs";
import { u as useElementBackground } from "../../../../composables/useElementBackground.mjs";
import { u as useCurrentElement } from "../../../../composables/useCurrentElement.mjs";
import { u as useTranslation } from "../../../../composables/useTranslation.mjs";
const _sfc_main = defineComponent({
  name: "VaDatePickerHeader",
  components: { VaButton },
  emits: ["update:view"],
  props: {
    monthNames: { type: Array, required: true },
    view: { type: Object },
    color: { type: String },
    disabled: { type: Boolean, default: false },
    ariaNextPeriodLabel: { type: String, default: "$t:nextPeriod" },
    ariaPreviousPeriodLabel: { type: String, default: "$t:previousPeriod" },
    ariaSwitchViewLabel: { type: String, default: "$t:switchView" }
  },
  setup(props, { emit }) {
    const { syncView, prev, next } = useView(props, emit);
    const switchView = () => {
      if (syncView.value.type === "day") {
        syncView.value = { ...syncView.value, type: "month" };
      } else if (syncView.value.type === "month") {
        syncView.value = { ...syncView.value, type: "year" };
      }
    };
    const changeView = (view) => {
      syncView.value = view;
    };
    const currentColor = useElementTextColor(useElementBackground(useCurrentElement()));
    return {
      ...useTranslation(),
      currentColor,
      prev,
      next,
      changeView,
      switchView,
      syncView
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=VaDatePickerHeader.vue_vue_type_script_lang.mjs.map
