{"version":3,"file":"useFormParent.mjs","sources":["../../../../../src/composables/useForm/useFormParent.ts"],"sourcesContent":["import { computed, provide, ref, shallowRef, type Ref, unref, toRef, UnwrapRef } from 'vue'\nimport { FormServiceKey } from './consts'\nimport { Form, FormFiled } from './types'\nimport { useFormChild } from './useFormChild'\n\ntype FormParentOptions = {\n  hideLoading: boolean\n  hideErrors: boolean\n  hideErrorMessages: boolean\n  immediate: boolean\n}\n\nexport const createFormContext = <Names extends string>(options: FormParentOptions) => {\n  const fields = ref(new Map<number, FormFiled<Names>>())\n\n  return {\n    // Vue unwrap ref automatically, but types are not for some reason\n    immediate: computed(() => options.immediate),\n    fields: computed(() => [...fields.value.values()]),\n    doShowError: computed(() => !options.hideErrors),\n    doShowErrorMessages: computed(() => !options.hideErrorMessages),\n    doShowLoading: computed(() => !options.hideLoading),\n    isFormDirty: ref(false),\n    registerField: (uid: number, field: FormFiled<Names>) => {\n      // Vue will unwrap ref automatically, but types are not for some reason\n      fields.value.set(uid, field as unknown as UnwrapRef<FormFiled<Names>>)\n    },\n    unregisterField: (uid: number) => {\n      fields.value.delete(uid)\n    },\n  }\n}\n\nexport const useFormParent = <Names extends string = string>(options: FormParentOptions): Form<Names> => {\n  const formContext = createFormContext<Names>(options)\n\n  provide<typeof formContext>(FormServiceKey, formContext)\n\n  const { fields, isFormDirty } = formContext\n\n  const fieldNames = computed(() => fields.value.map((field) => unref(field.name)).filter(Boolean) as Names[])\n  const fieldsNamed = computed(() => fields.value.reduce((acc, field) => {\n    if (unref(field.name)) { acc[unref(field.name) as Names] = field }\n    return acc\n  }, {} as Record<Names, UnwrapRef<FormFiled>>))\n  const formData = computed(() => fields.value.reduce((acc, field) => {\n    if (unref(field.name)) { acc[unref(field.name) as Names] = field.value }\n    return acc\n  }, {} as Record<Names, UnwrapRef<FormFiled['value']>>))\n  const isValid = computed(() => fields.value.every((field) => unref(field.isValid)))\n  const isLoading = computed(() => fields.value.some((field) => unref(field.isLoading)))\n  const isDirty = computed({\n    get () { return fields.value.some((field) => unref(field.isLoading)) || isFormDirty.value },\n    set (v) { isFormDirty.value = v },\n  })\n  const errorMessages = computed(() => fields.value.map((field) => unref(field.errorMessages)).flat())\n  const errorMessagesNamed = computed(() => fields.value.reduce((acc, field) => {\n    if (unref(field.name)) { acc[unref(field.name) as Names] = unref(field.errorMessages) }\n    return acc\n  }, {} as Record<Names, any>))\n\n  const validate = () => {\n    isDirty.value = true\n    // Validate each filed to get the error messages\n    return fields.value.reduce((acc, field) => {\n      return field.validate() && acc\n    }, true)\n  }\n\n  const validateAsync = () => {\n    isDirty.value = true\n    return Promise.all(fields.value.map((field) => field.validateAsync())).then((results) => {\n      return results.every(Boolean)\n    })\n  }\n\n  const reset = () => {\n    isDirty.value = false\n    fields.value.forEach((field) => field.reset())\n  }\n\n  const resetValidation = () => {\n    isDirty.value = false\n    fields.value.forEach((field) => field.resetValidation())\n  }\n\n  const focus = () => {\n    fields.value[0]?.focus()\n  }\n\n  const focusInvalidField = () => {\n    const invalidField = fields.value.find((field) => !field.isValid)\n\n    invalidField?.focus()\n  }\n\n  useFormChild({\n    name: ref(undefined),\n    isValid: isValid,\n    isLoading: isLoading,\n    isDirty: isDirty,\n    validate,\n    validateAsync,\n    reset,\n    resetValidation,\n    focus,\n    errorMessages: errorMessages,\n  })\n\n  return {\n    immediate: computed(() => options.immediate),\n    isDirty,\n    formData,\n    fields,\n    fieldsNamed,\n    fieldNames,\n    isValid,\n    isLoading,\n    errorMessages,\n    errorMessagesNamed,\n    validate,\n    reset,\n    resetValidation,\n    focus,\n    focusInvalidField,\n  }\n}\n"],"names":[],"mappings":";;;AAYa,MAAA,oBAAoB,CAAuB,YAA+B;AACrF,QAAM,SAAS,IAAQ,oBAAA,IAA+B,CAAA;AAE/C,SAAA;AAAA;AAAA,IAEL,WAAW,SAAS,MAAM,QAAQ,SAAS;AAAA,IAC3C,QAAQ,SAAS,MAAM,CAAC,GAAG,OAAO,MAAM,OAAO,CAAC,CAAC;AAAA,IACjD,aAAa,SAAS,MAAM,CAAC,QAAQ,UAAU;AAAA,IAC/C,qBAAqB,SAAS,MAAM,CAAC,QAAQ,iBAAiB;AAAA,IAC9D,eAAe,SAAS,MAAM,CAAC,QAAQ,WAAW;AAAA,IAClD,aAAa,IAAI,KAAK;AAAA,IACtB,eAAe,CAAC,KAAa,UAA4B;AAEhD,aAAA,MAAM,IAAI,KAAK,KAA+C;AAAA,IACvE;AAAA,IACA,iBAAiB,CAAC,QAAgB;AACzB,aAAA,MAAM,OAAO,GAAG;AAAA,IACzB;AAAA,EAAA;AAEJ;AAEa,MAAA,gBAAgB,CAAgC,YAA4C;AACjG,QAAA,cAAc,kBAAyB,OAAO;AAEpD,UAA4B,gBAAgB,WAAW;AAEjD,QAAA,EAAE,QAAQ,YAAgB,IAAA;AAEhC,QAAM,aAAa,SAAS,MAAM,OAAO,MAAM,IAAI,CAAC,UAAU,MAAM,MAAM,IAAI,CAAC,EAAE,OAAO,OAAO,CAAY;AACrG,QAAA,cAAc,SAAS,MAAM,OAAO,MAAM,OAAO,CAAC,KAAK,UAAU;AACjE,QAAA,MAAM,MAAM,IAAI,GAAG;AAAE,UAAI,MAAM,MAAM,IAAI,CAAU,IAAI;AAAA,IAAM;AAC1D,WAAA;AAAA,EAAA,GACN,CAAA,CAAyC,CAAC;AACvC,QAAA,WAAW,SAAS,MAAM,OAAO,MAAM,OAAO,CAAC,KAAK,UAAU;AAC9D,QAAA,MAAM,MAAM,IAAI,GAAG;AAAE,UAAI,MAAM,MAAM,IAAI,CAAU,IAAI,MAAM;AAAA,IAAM;AAChE,WAAA;AAAA,EAAA,GACN,CAAA,CAAkD,CAAC;AACtD,QAAM,UAAU,SAAS,MAAM,OAAO,MAAM,MAAM,CAAC,UAAU,MAAM,MAAM,OAAO,CAAC,CAAC;AAClF,QAAM,YAAY,SAAS,MAAM,OAAO,MAAM,KAAK,CAAC,UAAU,MAAM,MAAM,SAAS,CAAC,CAAC;AACrF,QAAM,UAAU,SAAS;AAAA,IACvB,MAAO;AAAS,aAAA,OAAO,MAAM,KAAK,CAAC,UAAU,MAAM,MAAM,SAAS,CAAC,KAAK,YAAY;AAAA,IAAM;AAAA,IAC1F,IAAK,GAAG;AAAE,kBAAY,QAAQ;AAAA,IAAE;AAAA,EAAA,CACjC;AACD,QAAM,gBAAgB,SAAS,MAAM,OAAO,MAAM,IAAI,CAAC,UAAU,MAAM,MAAM,aAAa,CAAC,EAAE,KAAM,CAAA;AAC7F,QAAA,qBAAqB,SAAS,MAAM,OAAO,MAAM,OAAO,CAAC,KAAK,UAAU;AACxE,QAAA,MAAM,MAAM,IAAI,GAAG;AAAE,UAAI,MAAM,MAAM,IAAI,CAAU,IAAI,MAAM,MAAM,aAAa;AAAA,IAAE;AAC/E,WAAA;AAAA,EAAA,GACN,CAAA,CAAwB,CAAC;AAE5B,QAAM,WAAW,MAAM;AACrB,YAAQ,QAAQ;AAEhB,WAAO,OAAO,MAAM,OAAO,CAAC,KAAK,UAAU;AAClC,aAAA,MAAM,SAAc,KAAA;AAAA,OAC1B,IAAI;AAAA,EAAA;AAGT,QAAM,gBAAgB,MAAM;AAC1B,YAAQ,QAAQ;AAChB,WAAO,QAAQ,IAAI,OAAO,MAAM,IAAI,CAAC,UAAU,MAAM,cAAe,CAAA,CAAC,EAAE,KAAK,CAAC,YAAY;AAChF,aAAA,QAAQ,MAAM,OAAO;AAAA,IAAA,CAC7B;AAAA,EAAA;AAGH,QAAM,QAAQ,MAAM;AAClB,YAAQ,QAAQ;AAChB,WAAO,MAAM,QAAQ,CAAC,UAAU,MAAM,OAAO;AAAA,EAAA;AAG/C,QAAM,kBAAkB,MAAM;AAC5B,YAAQ,QAAQ;AAChB,WAAO,MAAM,QAAQ,CAAC,UAAU,MAAM,iBAAiB;AAAA,EAAA;AAGzD,QAAM,QAAQ,MAAM;;AACX,iBAAA,MAAM,CAAC,MAAP,mBAAU;AAAA,EAAM;AAGzB,QAAM,oBAAoB,MAAM;AACxB,UAAA,eAAe,OAAO,MAAM,KAAK,CAAC,UAAU,CAAC,MAAM,OAAO;AAEhE,iDAAc;AAAA,EAAM;AAGT,eAAA;AAAA,IACX,MAAM,IAAI,MAAS;AAAA,IACnB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA,CACD;AAEM,SAAA;AAAA,IACL,WAAW,SAAS,MAAM,QAAQ,SAAS;AAAA,IAC3C;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEJ;"}