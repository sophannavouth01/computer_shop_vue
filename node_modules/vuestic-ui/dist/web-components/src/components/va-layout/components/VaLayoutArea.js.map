{"version":3,"file":"VaLayoutArea.js","sources":["../../../../../../src/components/va-layout/components/VaLayoutArea.vue"],"sourcesContent":["<template>\n  <VaLayoutAbsoluteWrapper v-if=\"absolute\">\n    <div :class=\"`va-layout-area va-layout__area va-layout__area--${area}`\">\n      <VaLayoutFixedWrapper v-if=\"fixed\" :area=\"area\">\n        <slot />\n      </VaLayoutFixedWrapper>\n      <slot v-else />\n    </div>\n  </VaLayoutAbsoluteWrapper>\n\n  <div v-else :class=\"`va-layout-area va-layout__area va-layout__area--${area}`\">\n    <VaLayoutFixedWrapper v-if=\"fixed\" :area=\"area\">\n      <slot />\n    </VaLayoutFixedWrapper>\n    <slot v-else />\n  </div>\n\n  <Transition>\n    <div\n      v-if=\"overlay\"\n      class=\"va-layout-area__overlay\"\n      :class=\"{ 'va-layout-area__overlay--fixed': fixed }\"\n      @click=\"$emit('overlay-click')\"\n    />\n  </Transition>\n</template>\n\n<script lang=\"ts\">\nimport { PropType, computed, defineComponent } from 'vue'\nimport { AreaName } from '../hooks/useGridTemplateArea'\nimport { AreaConfig } from '../hooks/useLayout'\nimport VaLayoutAbsoluteWrapper from './VaLayoutAbsoluteWrapper.vue'\nimport VaLayoutFixedWrapper from './VaLayoutFixedWrapper.vue'\n\n// Area is a simple div with a grid-area property\n// If area is absolute, it should be wrapped in a absolute wrapper\n// If area is fixed, it should be wrapped in a fixed wrapper\n// If area is fixed and absolute, it should be wrapped in absolute wrapper and then in fixed wrapper\nexport default defineComponent({\n  name: 'VaLayoutArea',\n\n  components: {\n    VaLayoutAbsoluteWrapper,\n    VaLayoutFixedWrapper,\n  },\n\n  props: {\n    area: { type: String as PropType<AreaName>, required: true },\n    config: { type: Object as PropType<AreaConfig>, required: true },\n  },\n\n  emits: ['overlay-click'],\n\n  setup (props) {\n    return {\n      absolute: computed(() => props.config.absolute || false),\n      fixed: computed(() => props.config.fixed || false),\n      overlay: computed(() => props.config.overlay || false),\n      // Content z-index is always 0, other areas must have bigger z-index by 1\n      zIndex: computed(() => (props.config.order || 0) + 1),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-layout {\n  &__area {\n    grid-area: v-bind(\"$props.area\");\n    z-index: v-bind(\"zIndex\");\n  }\n\n  &__absolute-area-wrapper {\n    z-index: v-bind(\"zIndex\");\n  }\n}\n\n.va-layout-area {\n  &__overlay {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: var(--va-layout-overlay-color);\n    z-index: v-bind(\"zIndex - 1\");\n\n    &.v-enter-active,\n    &.v-leave-active {\n      transition: opacity 0.5s ease;\n    }\n\n    &.v-enter-from,\n    &.v-leave-to {\n      opacity: 0;\n    }\n\n    &--fixed {\n      position: fixed;\n    }\n  }\n}\n</style>\n"],"names":["_createElementBlock","_Fragment","_openBlock","_createBlock","_withCtx","_createElementVNode","_normalizeClass","_renderSlot","_Transition"],"mappings":";;;;;;;sBACEA,mBAO0BC,UAAA,MAAA;AAAA,IAAA,KAAA,YAAAC,aADlBC,YAAA,oCAAA,EAAA,KAAA,KAAA;AAAA,MALK,SAAAC,QAAA,MAAA;AAAA,QAAAC,mBAAA,OAAA;AAAA,iBACmBC,eAAK,mDAAA,KAAA,MAAA;AAAA,QAAA,GAAA;AAAA,qCAAaH,YAAA,iCAAA;AAAA,YAAA,KAAA;AAAA;;;;;YAG9C,GAAA;AAAA,UAAA,GAAA,GAAA,CAAA,MAAA,CAAA,KAAAI,WAAA,KAAA,QAAA,WAAA,EAAA,KAAA,EAAA,CAAA;AAAA;;;IAIc,CAAA,MAAAL,UAAA,GAAAF,mBAAA,OAAA;AAAA,MAAA,KAAA;AAAA,aACYM,eAAK,mDAAA,KAAA,MAAA;AAAA,IAAA,GAAA;AAAA,iCAAaH,YAAA,iCAAA;AAAA,QAAA,KAAA;AAAA;;;;;QAG9C,GAAA;AAAA,MAAA,GAAA,GAAA,CAAA,MAAA,CAAA,KAGFI,WAOa,KAAA,QAAA,WAAA,EAAA,KAAA,EAAA,CAAA;AAAA,IAAA,GAAA,CAAA;AAAA,gBALHC,YAAO,MAAA;AAAA,MADf,SAAAJ,QAAA,MAAA;AAAA,QAAA,KAAA,WAAAF,aAEQF,mBAAA,OAAA;AAAA,UAEL,KAAA;AAAA,UAAA,OAAAM,eAAA,CAAA,2BAAA,EAAA,kCAAA,KAAA,MAAA,CAAA,CAAA;AAAA;;;;;;;;"}