import { _ as _sfc_main } from "./VaInputLabel.vue_vue_type_script_lang.js";
import { openBlock, createElementBlock, normalizeStyle, renderSlot, normalizeProps, guardReactiveProps, createTextVNode, toDisplayString, createCommentVNode } from "vue";
import { _ as _export_sfc } from "../../../../plugin-vue_export-helper.js";
const _style_0 = ".va-input-label {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  font-size: 0.625rem;\n  letter-spacing: 0.6px;\n  line-height: 1.2;\n  font-weight: 700;\n  text-transform: uppercase;\n  min-height: 1rem;\n  display: inline-block;\n}\n.va-input-label__required-mark {\n  transform: translate(0, -2px);\n  color: var(--va-danger);\n  font-size: 18px;\n  font-weight: var(--va-input-container-label-font-weight);\n  vertical-align: middle;\n}";
const _hoisted_1 = {
  key: 0,
  class: "va-input-label__required-mark"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("label", {
    "aria-hidden": "true",
    class: "va-input-label",
    style: normalizeStyle({ color: _ctx.getColor(_ctx.$props.color, void 0, true) })
  }, [
    renderSlot(_ctx.$slots, "default", normalizeProps(guardReactiveProps({ label: _ctx.label, requiredMark: _ctx.requiredMark, color: _ctx.getColor(_ctx.$props.color) })), () => [
      createTextVNode(toDisplayString(_ctx.label) + " ", 1),
      _ctx.requiredMark ? (openBlock(), createElementBlock("span", _hoisted_1, " * ")) : createCommentVNode("", true)
    ])
  ], 4);
}
const VaInputLabel = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["styles", [...(_sfc_main.components ? Object.values(_sfc_main.components) : []).map((c) => c.styles || []).flat(), _style_0]]]);
export {
  VaInputLabel as V
};
//# sourceMappingURL=VaInputLabel.js.map
