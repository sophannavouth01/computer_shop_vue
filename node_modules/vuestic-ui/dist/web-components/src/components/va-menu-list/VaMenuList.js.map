{"version":3,"file":"VaMenuList.js","sources":["../../../../../src/components/va-menu-list/VaMenuList.vue"],"sourcesContent":["<template>\n  <table class=\"va-menu-list\" ref=\"container\" v-bind=\"makeMenuContainerAttributes()\">\n    <tbody>\n      <template v-if=\"$slots.default\">\n        <template v-for=\"child in getUnSlottedVNodes($slots.default())\">\n          <component v-if=\"getVNodeComponentName(child) === 'VaMenuItem'\" :is=\"child\" :key=\"getVNodeKey(child) + 'menuitem'\" />\n          <component v-else-if=\"getVNodeComponentName(child) === 'VaDropdown'\" :is=\"child\" :key=\"getVNodeKey(child) + 'menu-dropdown'\" />\n          <td colspan=\"999\" v-else :key=\"getVNodeKey(child)\" class=\"va-menu-list__virtual-td\">\n            <component :is=\"child\" />\n          </td>\n        </template>\n      </template>\n      <slot v-else>\n        <template v-for=\"(options, groupName) in optionGroups\" :key=\"groupName\">\n          <slot v-if=\"groupName !== '_noGroup'\"  name=\"group\">\n            <tr>\n              <td colspan=\"9999\">\n                <VaMenuGroup :group-name=\"groupName\" />\n              </td>\n            </tr>\n          </slot>\n          <VaMenuItem\n            v-for=\"(option) in options\"\n            :key=\"getTrackBy(option)\"\n            :name=\"getText(option)\" :icon=\"option.icon\"\n            :right-icon=\"option.rightIcon\"\n            :disabled=\"getDisabled(option)\"\n            @selected=\"$emit('selected', getValue(option), option)\"\n          >\n            <template #left-icon=\"bind\">\n              <slot name=\"left-icon\" v-bind=\"bind\" />\n            </template>\n            <template #right-icon=\"bind\">\n              <slot name=\"right-icon\" v-bind=\"bind\" />\n            </template>\n          </VaMenuItem>\n        </template>\n      </slot>\n    </tbody>\n  </table>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed, VNode, ref, Fragment } from 'vue'\nimport VaMenuItem from './components/VaMenuItem.vue'\nimport VaMenuGroup from './components/VaMenuGroup.vue'\nimport { VaMenuOption } from './types'\nimport { useSelectableList, useSelectableListProps } from '../../composables'\nimport { useMenuKeyboardNavigation, makeMenuContainerAttributes } from './composables/useMenuKeyboardNavigation'\n\nexport default defineComponent({\n  name: 'VaMenuList',\n  components: { VaMenuItem, VaMenuGroup },\n  props: {\n    ...useSelectableListProps,\n    options: { type: Array as PropType<VaMenuOption[]>, default: () => [] },\n  },\n  emits: ['selected'],\n  setup (props) {\n    const container = ref<HTMLElement>()\n    useMenuKeyboardNavigation(container)\n\n    const { getText, getValue, getDisabled, getGroupBy, getTrackBy } = useSelectableList(props)\n\n    const optionGroups = computed(() => props.options\n      .reduce((groups: Record<string, VaMenuOption[]>, option) => {\n        const groupBy = getGroupBy(option)\n\n        if (!groupBy) {\n          groups._noGroup.push(option)\n        } else {\n          if (!groups[groupBy]) { groups[groupBy] = [] }\n\n          groups[groupBy].push(option)\n        }\n\n        return groups\n      }, { _noGroup: [] }))\n\n    const getUnSlottedVNodes = (nodes: VNode[]) => {\n      if (Array.isArray(nodes) && nodes[0].type === Fragment) {\n        // If passed as slot, ignore Fragment VNode (template #default)\n        return nodes[0].children as VNode[]\n      }\n\n      return nodes\n    }\n\n    const getVNodeComponentName = (node: VNode) => {\n      if (typeof node.type === 'object' && 'name' in node.type && typeof node.type.name === 'string') {\n        return node.type.name\n      }\n\n      return ''\n    }\n\n    const getVNodeKey = (node: VNode): string => {\n      if (typeof node.type === 'string') {\n        return node.type\n      }\n\n      if (typeof node.type === 'object' && 'name' in node.type && typeof node.type.name === 'string') {\n        return node.type.name\n      }\n\n      return String(node.key)\n    }\n\n    return {\n      container,\n      optionGroups,\n      makeMenuContainerAttributes,\n      getVNodeComponentName,\n      getUnSlottedVNodes,\n      getVNodeKey,\n      getText,\n      getValue,\n      getDisabled,\n      getTrackBy,\n    }\n  },\n})\n\n</script>\n\n<style lang=\"scss\">\n@import './variables';\n\n.va-menu-list {\n  overflow: auto;\n  min-width: 200px;\n  table-layout: fixed;\n  width: max-content;\n  outline: none;\n\n  .va-menu-item {\n    // Override VaDropdown style\n    display: table-row;\n    vertical-align: unset;\n    line-height: unset;\n  }\n\n  // Without & at the start, style will be applied globally\n  & td:not(&__virtual-td) {\n    padding-top: calc(var(--va-menu-padding-y) / 2);\n    padding-bottom: calc(var(--va-menu-padding-y) / 2);\n  }\n\n  &__virtual-td:has(tr) {\n    // Behaves like tbody, so column width are inherited for tr\n    display: table-row-group;\n  }\n\n  .va-divider {\n    margin: 0;\n  }\n}\n</style>\n"],"names":["_resolveComponent","_openBlock","_createElementBlock","_mergeProps","_createElementVNode","_Fragment","_renderList","_createBlock","_resolveDynamicComponent","_renderSlot","_createCommentVNode","_normalizeProps","_guardReactiveProps"],"mappings":";;;;;;;AACE,QAAA,wBAAAA,iBAsCQ,YAtCR;SAAgCC,UAAW,GAAAC,mBAAA,SAAAC,WAAA;AAAA,IAAS,OAAA;AAAA,IAClD,KAAA;AAAA,EAAA,GAAA,KACkB,4BAAc,CAAA,GAAA;AAAA,IAC5BC,mBAAA,SAAA,MAAA;AAAA,MAAA,KAAA,OAAA,WAAAH,UACmB,IAA2B,GAAAC,mBAAAG,UAAA,EAAA,KAAA,EAAA,GAAAC,WAAA,KAAA,mBAAA,KAAA,OAAA,QAAA,CAAA,GAAA,CAAA,UAAA;AAA5C,eAAAL,UAAA,GAAAC,mBAAqHG,UAAhD,MAAA;AAAA,UAAA,KAAQ,sBAAiB,KAAK,MAAA,gBAAAJ,UAAA,GAAAM,YAAAC,wBAAA,KAAA,GAAA;AAAA,YAC7E,KAAA,KAAA,YAAA,KAAsB,IAAK;AAAA,UAAA,CAAA,KAAA,KAAiC,sBAAiB,KAAK,MAAA,gBAAAP,UAAA,GAAAM,YAAAC,wBAAA,KAAA,GAAA;AAAA,YACxG,KAAA,KAAA,YAAA,KAAA,IAAA;AAAA,UAAA,CAAA,MAAAP,UAAA,GAAgDC,mBAAA,MAAA;AAAA,YAAG,SAAM;AAAA,YAAA,KAAA,KAAA,YAAA,KAAA;AAAA;;;;QAK7D,GAAA,EAAA;AAAA,MAAA,CAAA,GAAA,GAAA,KAAAO,WAAA,KAAA,QAAA,WAAA,EAAA,KAAA,EAAA,GAAA,MAAA;AAAA,mBAEgB,IAAS,GAAAP,mBAAAG,UAAA,MAAAC,WAAA,KAAA,cAAA,CAAA,SAAA,cAAA;iBAArBL,UAMO,GAAAC,mBAAAG,UAAA,EAAA,KAAA,aAAA;AAAA,YALL,cAAA,aAAAI,WACE,KAEK,QAAA,SAFL,EAEK,KAAA,EAAA,GAAA,MAAA;AAAA,cADoCL,mBAAA,MAAA,MAAA;AAAA,gBAAAA,mBAAA,MAAA,YAAA;AAAA;;;YAI7C,CAAA,IAAAM,mBAAA,IAAA,IAAA;AAAA,aAAAT,UAEQ,IAAiB,GAAAC,mBAAAG,UAAA,MAAAC,WAAA,SAAA,CAAA,WAAA;AAChB,qBAAAL,UAAA,GAAQM,YAAM,uBAAA;AAAA,gBAAI,KAAI,KAAE,WAAW,MAAA;AAAA,gBACzC,mBAAY,MAAO;AAAA,gBACnB,MAAU,OAAA;AAAA,gBACV,cAAQ,OAAA;AAAA,gBAAA,UAAA,KAAA,YAAA,MAAA;AAAA,gBAEE,YAAS,YAAE,KAAI,MAAA,YAAA,KAAA,SAAA,MAAA,GAAA,MAAA;AAAA,cAAA,GAAA;AAAA;kBAGfE,WAAU,aACqB,aADfE,eAAAC,mBAAA,IAAA,CAAA,CAAA;AAAA,gBAAA,CAAA;AAAA;;;;;;;;;;;;;"}