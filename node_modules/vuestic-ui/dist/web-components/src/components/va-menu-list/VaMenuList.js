import { _ as _sfc_main } from "./VaMenuList.vue_vue_type_script_lang.js";
import { resolveComponent, openBlock, createElementBlock, mergeProps, createElementVNode, Fragment, renderList, createBlock, resolveDynamicComponent, renderSlot, createVNode, createCommentVNode, withCtx, normalizeProps, guardReactiveProps } from "vue";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.js";
const _style_0 = ":root,\n:host {\n  --va-menu-padding-x: 8px;\n  --va-menu-padding-y: 8px;\n  --va-menu-item-hover-color: var(--va-primary);\n  --va-menu-item-hover-opacity: 0.05;\n}\n.va-menu-list {\n  overflow: auto;\n  min-width: 200px;\n  table-layout: fixed;\n  width: -moz-max-content;\n  width: max-content;\n  outline: none;\n}\n.va-menu-list .va-menu-item {\n  display: table-row;\n  vertical-align: unset;\n  line-height: unset;\n}\n.va-menu-list td:not(.va-menu-list__virtual-td) {\n  padding-top: calc(var(--va-menu-padding-y) / 2);\n  padding-bottom: calc(var(--va-menu-padding-y) / 2);\n}\n.va-menu-list__virtual-td:has(tr) {\n  display: table-row-group;\n}\n.va-menu-list .va-divider {\n  margin: 0;\n}";
const _hoisted_1 = { colspan: "9999" };
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_VaMenuGroup = resolveComponent("VaMenuGroup");
  const _component_VaMenuItem = resolveComponent("VaMenuItem");
  return openBlock(), createElementBlock("table", mergeProps({
    class: "va-menu-list",
    ref: "container"
  }, _ctx.makeMenuContainerAttributes()), [
    createElementVNode("tbody", null, [
      _ctx.$slots.default ? (openBlock(true), createElementBlock(Fragment, { key: 0 }, renderList(_ctx.getUnSlottedVNodes(_ctx.$slots.default()), (child) => {
        return openBlock(), createElementBlock(Fragment, null, [
          _ctx.getVNodeComponentName(child) === "VaMenuItem" ? (openBlock(), createBlock(resolveDynamicComponent(child), {
            key: _ctx.getVNodeKey(child) + "menuitem"
          })) : _ctx.getVNodeComponentName(child) === "VaDropdown" ? (openBlock(), createBlock(resolveDynamicComponent(child), {
            key: _ctx.getVNodeKey(child) + "menu-dropdown"
          })) : (openBlock(), createElementBlock("td", {
            colspan: "999",
            key: _ctx.getVNodeKey(child),
            class: "va-menu-list__virtual-td"
          }, [
            (openBlock(), createBlock(resolveDynamicComponent(child)))
          ]))
        ], 64);
      }), 256)) : renderSlot(_ctx.$slots, "default", { key: 1 }, () => [
        (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.optionGroups, (options, groupName) => {
          return openBlock(), createElementBlock(Fragment, { key: groupName }, [
            groupName !== "_noGroup" ? renderSlot(_ctx.$slots, "group", { key: 0 }, () => [
              createElementVNode("tr", null, [
                createElementVNode("td", _hoisted_1, [
                  createVNode(_component_VaMenuGroup, { "group-name": groupName }, null, 8, ["group-name"])
                ])
              ])
            ]) : createCommentVNode("", true),
            (openBlock(true), createElementBlock(Fragment, null, renderList(options, (option) => {
              return openBlock(), createBlock(_component_VaMenuItem, {
                key: _ctx.getTrackBy(option),
                name: _ctx.getText(option),
                icon: option.icon,
                "right-icon": option.rightIcon,
                disabled: _ctx.getDisabled(option),
                onSelected: ($event) => _ctx.$emit("selected", _ctx.getValue(option), option)
              }, {
                "left-icon": withCtx((bind) => [
                  renderSlot(_ctx.$slots, "left-icon", normalizeProps(guardReactiveProps(bind)))
                ]),
                "right-icon": withCtx((bind) => [
                  renderSlot(_ctx.$slots, "right-icon", normalizeProps(guardReactiveProps(bind)))
                ]),
                _: 2
              }, 1032, ["name", "icon", "right-icon", "disabled", "onSelected"]);
            }), 128))
          ], 64);
        }), 128))
      ])
    ])
  ], 16);
}
const _VaMenuList = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["styles", [...(_sfc_main.components ? Object.values(_sfc_main.components) : []).map((c) => c.styles || []).flat(), _style_0]]]);
export {
  _VaMenuList as _
};
//# sourceMappingURL=VaMenuList.js.map
