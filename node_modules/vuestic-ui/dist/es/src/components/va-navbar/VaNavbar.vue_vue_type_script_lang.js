import { defineComponent, computed } from "vue";
import { u as useFixedBarProps, a as useFixedBar } from "../../composables/useFixedBar.js";
import { u as useComponentPresetProp } from "../../composables/useComponentPreset.js";
import { s as setupScroll } from "../../composables/useScroll.js";
import { u as useColors } from "../../composables/useColors.js";
import { u as useTextColor } from "../../composables/useTextColor.js";
import { u as useBem } from "../../composables/useBem.js";
const _sfc_main = defineComponent({
  name: "VaNavbar",
  props: {
    ...useFixedBarProps,
    ...useComponentPresetProp,
    color: { type: String, default: "background-secondary" },
    textColor: { type: String },
    shape: { type: Boolean, default: false },
    shadowed: { type: Boolean, default: false },
    bordered: { type: Boolean, default: false }
  },
  setup(props) {
    const { scrollRoot, isScrolledDown } = setupScroll(props.fixed);
    const { fixedBarStyleComputed } = useFixedBar(props, isScrolledDown);
    const { getColor, shiftHSLAColor } = useColors();
    const color = computed(() => getColor(props.color));
    const { textColorComputed } = useTextColor(color);
    const shapeStyleComputed = computed(() => ({
      borderTopColor: shiftHSLAColor(color.value, { h: -1, s: -11, l: 10 })
    }));
    const computedStyle = computed(() => ({
      ...fixedBarStyleComputed.value,
      backgroundColor: color.value,
      color: textColorComputed.value,
      fill: textColorComputed.value
    }));
    const bemClasses = useBem("va-navbar", () => ({
      shadowed: props.shadowed,
      bordered: props.bordered
    }));
    return {
      bemClasses,
      scrollRoot,
      computedStyle,
      shapeStyleComputed
    };
  }
});
export {
  _sfc_main as _
};

import '../../../VaNavbar.css';
//# sourceMappingURL=VaNavbar.vue_vue_type_script_lang.js.map
