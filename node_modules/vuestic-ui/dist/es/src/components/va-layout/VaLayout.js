import { _ as _sfc_main } from "./VaLayout.vue_vue_type_script_lang.js";
import { resolveComponent, openBlock, createElementBlock, normalizeStyle, Fragment, renderList, createBlock, withCtx, renderSlot, createElementVNode } from "vue";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.js";
const VaLayout_vue_vue_type_style_index_0_lang = "";
const _hoisted_1 = { class: "va-layout__area va-layout__area--content" };
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_VaLayoutArea = resolveComponent("VaLayoutArea");
  return openBlock(), createElementBlock("div", {
    class: "va-layout",
    style: normalizeStyle(`--va-horizontal-template: ${String(_ctx.horizontalTemplate)};--va-vertical-template: ${String(_ctx.verticalTemplate)};--va-template-area: ${String(_ctx.templateArea)};--va-paddings-top-px: ${String(_ctx.paddings.top + "px")};--va-paddings-bottom-px: ${String(_ctx.paddings.bottom + "px")};--va-paddings-left-px: ${String(_ctx.paddings.left + "px")};--va-paddings-right-px: ${String(_ctx.paddings.right + "px")}`)
  }, [
    (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.areaNames, (area) => {
      return openBlock(), createBlock(_component_VaLayoutArea, {
        key: area,
        area,
        config: _ctx.$props[area] || {},
        onOverlayClick: ($event) => _ctx.$emit(`${area}-overlay-click`)
      }, {
        default: withCtx(() => [
          renderSlot(_ctx.$slots, area)
        ]),
        _: 2
      }, 1032, ["area", "config", "onOverlayClick"]);
    }), 128)),
    createElementVNode("div", _hoisted_1, [
      renderSlot(_ctx.$slots, "default", {}, () => [
        renderSlot(_ctx.$slots, "content")
      ])
    ])
  ], 4);
}
const _VaLayout = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  _VaLayout as _
};

import '../../../VaLayout.css';
//# sourceMappingURL=VaLayout.js.map
