{"version":3,"file":"add-event-listener.js","sources":["../../../../src/utils/add-event-listener.ts"],"sourcesContent":["/**\n * Add event listener to element if it is element\n * In case if it SVGElement, it will try to add event listener to parentElement\n * Otherwise it will do nothing\n */\nexport const addEventListener = (target: unknown, ...args: Parameters<HTMLElement['addEventListener']>) => {\n  if (!target || typeof target !== 'object') { return }\n\n  if ('addEventListener' in target && typeof target.addEventListener === 'function') {\n    target.addEventListener(...args)\n    return\n  }\n\n  if ('parentElement' in target) {\n    addEventListener(target.parentElement, ...args)\n  }\n}\n\n/**\n * Remove event listener to element if it is element\n * In case if it SVGElement, it will try to add event listener to parentElement\n * Otherwise it will do nothing\n */\nexport const removeEventListener = (target: unknown, ...args: Parameters<HTMLElement['addEventListener']>) => {\n  if (!target || typeof target !== 'object') { return }\n\n  if ('removeEventListener' in target && typeof target.removeEventListener === 'function') {\n    target.removeEventListener(...args)\n    return\n  }\n\n  if ('parentElement' in target) {\n    removeEventListener(target.parentElement, ...args)\n  }\n}\n"],"names":[],"mappings":"AAKa,MAAA,mBAAmB,CAAC,WAAoB,SAAsD;AACzG,MAAI,CAAC,UAAU,OAAO,WAAW,UAAU;AAAE;AAAA,EAAO;AAEpD,MAAI,sBAAsB,UAAU,OAAO,OAAO,qBAAqB,YAAY;AAC1E,WAAA,iBAAiB,GAAG,IAAI;AAC/B;AAAA,EACF;AAEA,MAAI,mBAAmB,QAAQ;AACZ,qBAAA,OAAO,eAAe,GAAG,IAAI;AAAA,EAChD;AACF;AAOa,MAAA,sBAAsB,CAAC,WAAoB,SAAsD;AAC5G,MAAI,CAAC,UAAU,OAAO,WAAW,UAAU;AAAE;AAAA,EAAO;AAEpD,MAAI,yBAAyB,UAAU,OAAO,OAAO,wBAAwB,YAAY;AAChF,WAAA,oBAAoB,GAAG,IAAI;AAClC;AAAA,EACF;AAEA,MAAI,mBAAmB,QAAQ;AACT,wBAAA,OAAO,eAAe,GAAG,IAAI;AAAA,EACnD;AACF;"}